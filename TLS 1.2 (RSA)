File "tls-lib.pvl", line 380, characters 37-38:
Warning: identifier ck rebound.
File "tls-lib.pvl", line 376, characters 41-43:
Warning: identifier ems rebound.
File "tls-lib.pvl", line 458, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 462, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 468, characters 8-10:
Warning: identifier log rebound.
File "tls-lib.pvl", line 471, characters 8-10:
Warning: identifier log rebound.
File "tls-lib.pvl", line 482, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 485, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 508, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 513, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 515, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 520, characters 8-10:
Warning: identifier log rebound.
File "tls-lib.pvl", line 532, characters 12-14:
Warning: identifier log rebound.
File "tls-lib.pvl", line 538, characters 8-10:
Warning: identifier log rebound.
File "tls-lib.pvl", line 563, characters 10-11:
Warning: identifier pt rebound.
File "tls-lib.pvl", line 575, character 38:
Warning: identifier a rebound.
File "tls-lib.pvl", line 580, characters 11-23:
Warning: identifier master_secret rebound.
File "tls-lib.pvl", line 585, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 589, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 592, characters 13-15:
Warning: identifier log rebound.
File "tls-lib.pvl", line 595, characters 13-15:
Warning: identifier log rebound.
File "tls-lib.pvl", line 617, character 39:
Warning: identifier a rebound.
File "tls-lib.pvl", line 619, characters 10-13:
Warning: identifier mode rebound.
File "tls-lib.pvl", line 630, characters 11-23:
Warning: identifier master_secret rebound.
File "tls-lib.pvl", line 635, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 638, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 641, characters 10-12:
Warning: identifier log rebound.
File "tls-lib.pvl", line 650, characters 13-15:
Warning: identifier log rebound.
Linear part:
dh_ideal(dh_ideal(G,x),y) = dh_ideal(dh_ideal(G,y),x)
Completing equations...
Completed equations:
dh_ideal(dh_ideal(G,x),y) = dh_ideal(dh_ideal(G,y),x)
Convergent part: No equation.
Process 0 (that is, the initial process):
(
    {1}!
    {2}new cr: random;
    {3}in(io, offer: params);
    {4}out(io, CH(cr,offer));
    {5}in(io, SH(sr: random,mode: params));
    {6}let nego(=TLS12,k: kex_alg,h: hash_alg,a: ae_alg,pt: psk_type) = mode in
    {7}let v: version = TLS12 in
    {8}let log: bitstring = (CH(cr,offer),SH(sr,mode)) in
    {9}in(io, CRT(p: pubkey));
    {10}let log_1: bitstring = (log,CRT(p)) in
    {46}get longTermKeys_tbl(sn: prin,xxx: privkey,=p) in
    {11}let DHE(g: group) = k in
    (
        {12}in(io, SKE(=g,e: element,s: bitstring));
        {13}let log_2: bitstring = (log_1,SKE(g,e,s)) in
        {14}if (verify(p,hash(h,(cr,sr,g,e)),s) = true) then
        {15}new x: bitstring;
        {16}let gx: element = catch-fail(dh_exp(g,G,x)) in
        {17}let v_1: bool = not-caught-fail(gx) in
        {18}let (x_1: bitstring,gx_1: element) = (if v_1 then (x,gx) else fail-any) in
        {19}let pms: bitstring = e2b(dh_exp(g,e,x_1)) in
        {20}let ms: bitstring = tls12_prf(pms,master_secret,(cr,sr)) in
        {21}out(io, CKE(e2b(gx_1)));
        {22}let log_3: bitstring = (log_2,CKE(e2b(gx_1))) in
        {23}let m1: bitstring = tls12_prf(ms,client_finished,log_3) in
        {24}out(io, FIN(m1));
        {25}let log_4: bitstring = (log_3,FIN(m1)) in
        {26}in(io, FIN(m2: bitstring));
        {27}if (m2 = tls12_prf(ms,server_finished,log_4)) then
        {28}let ck: ae_key = b2ae(tls12_prf(ms,client_key_expansion,(sr,cr))) in
        {29}let sk: ae_key = b2ae(tls12_prf(ms,server_key_expansion,(sr,cr))) in
        {30}event ClientFinished(TLS12,cr,sr,NoPSK,p,offer,mode,ck,sk,m1,ms);
        {31}insert clientSession(cr,sr,NoPSK,p,offer,mode,ck,sk,m1,ms)
    )
    else
        {32}let RSA(r: rsa_alg) = k in
        {33}new pms_1: bitstring;
        {34}let ms_1: bitstring = tls12_prf(pms_1,master_secret,(cr,sr)) in
        {35}out(io, CKE(rsa_enc(p,pms_1)));
        {36}let log_5: bitstring = (log_1,CKE(rsa_enc(p,pms_1))) in
        {37}let m1_1: bitstring = tls12_prf(ms_1,client_finished,log_5) in
        {38}out(io, FIN(m1_1));
        {39}let log_6: bitstring = (log_5,FIN(m1_1)) in
        {40}in(io, FIN(m2_1: bitstring));
        {41}if (m2_1 = tls12_prf(ms_1,server_finished,log_6)) then
        {42}let ck_1: ae_key = b2ae(tls12_prf(ms_1,client_key_expansion,(sr,cr))) in
        {43}let sk_1: ae_key = b2ae(tls12_prf(ms_1,server_key_expansion,(sr,cr))) in
        {44}event ClientFinished(TLS12,cr,sr,NoPSK,p,offer,mode,ck_1,sk_1,m1_1,ms_1);
        {45}insert clientSession(cr,sr,NoPSK,p,offer,mode,ck_1,sk_1,m1_1,ms_1)
) | (
    {47}!
    {48}in(io, CH(cr_1: random,offer_1: params));
    {49}in(io, SH(xxx_1: random,mode_1: params));
    {50}let nego(=TLS12,k_1: kex_alg,h_1: hash_alg,a_1: ae_alg,pt_1: psk_type) = mode_1 in
    {51}let v_2: version = TLS12 in
    {52}new sr_1: random;
    {53}out(io, SH(sr_1,mode_1));
    {54}let log_7: bitstring = (CH(cr_1,offer_1),SH(sr_1,mode_1)) in
    {103}get longTermKeys_tbl(sn_1: prin,sk_2: privkey,p_1: pubkey) in
    {55}event ServerChoosesVersion(cr_1,sr_1,p_1,v_2);
    {56}event ServerChoosesKEX(cr_1,sr_1,p_1,v_2,k_1);
    {57}event ServerChoosesAE(cr_1,sr_1,p_1,v_2,a_1);
    {58}event ServerChoosesHash(cr_1,sr_1,p_1,v_2,h_1);
    {59}out(io, CRT(p_1));
    {60}let log_8: bitstring = (log_7,CRT(p_1)) in
    {61}let DHE(g_1: group) = k_1 in
    (
        {62}new x_2: bitstring;
        {63}let gx_2: element = catch-fail(dh_exp(g_1,G,x_2)) in
        {64}let v_3: bool = not-caught-fail(gx_2) in
        {65}let (y: bitstring,gy: element) = (if v_3 then (x_2,gx_2) else fail-any) in
        {66}let sg: bitstring = sign(sk_2,hash(h_1,(cr_1,sr_1,g_1,gy))) in
        {67}out(io, SKE(g_1,gy,sg));
        {68}let log_9: bitstring = (log_8,SKE(g_1,gy,sg)) in
        {69}in(io, CKE(e2b(gx_3: element)));
        {70}let log_10: bitstring = (log_9,CKE(e2b(gx_3))) in
        {71}let pms_2: bitstring = e2b(dh_exp(g_1,gx_3,y)) in
        {72}let ms_2: bitstring = tls12_prf(pms_2,master_secret,(cr_1,sr_1)) in
        {73}in(io, FIN(m1_2: bitstring));
        {74}if (m1_2 = tls12_prf(ms_2,client_finished,log_10)) then
        {75}let log_11: bitstring = (log_10,FIN(m1_2)) in
        {76}let m2_2: bitstring = tls12_prf(ms_2,server_finished,log_11) in
        {77}let cak: ae_key = b2ae(tls12_prf(ms_2,client_key_expansion,(sr_1,cr_1))) in
        {78}let sak: ae_key = b2ae(tls12_prf(ms_2,server_key_expansion,(sr_1,cr_1))) in
        {79}event ServerFinished(TLS12,cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak,sak,m1_2,ms_2);
        {80}out(io, FIN(m2_2));
        {81}insert serverSession(cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak,sak,m1_2,ms_2);
        {82}phase 1;
        {83}event PostSessionCompromisedKey(pk(sk_2));
        {84}out(io, sk_2)
    )
    else
        {85}let RSA(r_1: rsa_alg) = k_1 in
        {86}in(io, CKE(epms: bitstring));
        {87}let log_12: bitstring = (log_8,CKE(epms)) in
        {88}let success(pms_3: bitstring,leak: bitstring) = rsa_dec(r_1,sk_2,epms) in
        {89}out(io, leak);
        {90}let ms_3: bitstring = tls12_prf(pms_3,master_secret,(cr_1,sr_1)) in
        {91}in(io, FIN(m1_3: bitstring));
        {92}if (m1_3 = tls12_prf(ms_3,client_finished,log_12)) then
        {93}let log_13: bitstring = (log_12,FIN(m1_3)) in
        {94}let m2_3: bitstring = tls12_prf(ms_3,server_finished,log_13) in
        {95}let cak_1: ae_key = b2ae(tls12_prf(ms_3,client_key_expansion,(sr_1,cr_1))) in
        {96}let sak_1: ae_key = b2ae(tls12_prf(ms_3,server_key_expansion,(sr_1,cr_1))) in
        {97}event ServerFinished(TLS12,cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak_1,sak_1,m1_3,ms_3);
        {98}out(io, FIN(m2_3));
        {99}insert serverSession(cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak_1,sak_1,m1_3,ms_3);
        {100}phase 1;
        {101}event PostSessionCompromisedKey(pk(sk_2));
        {102}out(io, sk_2)
) | (
    {104}!
    (
        {105}event WeakOrCompromisedKey(NoPubKey)
    ) | (
        {106}in(io, a_2: prin);
        {107}new k_2: privkey;
        {108}insert longTermKeys_tbl(a_2,k_2,pk(k_2));
        {109}out(io, pk(k_2))
    ) | (
        {110}in(io, (a_3: prin,k_3: privkey));
        {111}event WeakOrCompromisedKey(pk(k_3));
        {112}insert longTermKeys_tbl(a_3,k_3,pk(k_3))
    ) | (
        {113}in(io, (a_4: prin,b: prin));
        {114}new pskAB: bitstring;
        {115}insert preSharedKeys(a_4,b,PSK(pskAB))
    ) | (
        {116}in(io, (a_5: prin,b_1: prin));
        {117}new pskAB_1: bitstring;
        {118}event CompromisedPreSharedKey(PSK(pskAB_1));
        {119}insert preSharedKeys(a_5,b_1,PSK(pskAB_1));
        {120}out(io, pskAB_1)
    )
) | (
    {121}!
    (
        {127}get clientSession0(cr_2: random,psk: preSharedKey,o: params,kc0: ae_key,ems0: bitstring) in
        {122}let nego(v_4: version,kkk: kex_alg,hhh: hash_alg,a_6: ae_alg,pt_2: psk_type) = o in
        {123}in(io, (n: bitstring,ad: bitstring));
        {124}let mesg: bitstring = m_c0(TLS13,cr_2,psk) in
        {125}event ClientSends0(TLS13,cr_2,psk,n,ad,mesg);
        {126}out(io, aead_enc(a_6,kc0,n,ad,mesg))
    ) | (
        {132}get serverSession0(cr_3: random,psk_1: preSharedKey,o_1: params,kc0_1: ae_key,ems0_1: bitstring) in
        {128}let nego(v_5: version,kkk_1: kex_alg,hhh_1: hash_alg,a_7: ae_alg,pt_3: psk_type) = o_1 in
        {129}in(io, (n_1: bitstring,ad_1: bitstring,c: bitstring));
        {130}let f: bitstring = aead_dec(a_7,kc0_1,n_1,ad_1,c) in
        {131}event ServerReceives0(TLS13,cr_3,psk_1,n_1,ad_1,f)
    ) | (
        {138}get serverSession0_5(cr_4: random,sr_2: random,psk_2: preSharedKey,ps: pubkey,o_2: params,m: params,kc: ae_key,ks: ae_key,ems: bitstring) in
        {133}let nego(v_6: version,kkk_2: kex_alg,hhh_2: hash_alg,a_8: ae_alg,pt_4: psk_type) = m in
        {134}in(io, (n_2: bitstring,ad_2: bitstring));
        {135}let mesg_1: bitstring = m_s(v_6,cr_4,sr_2,ps,psk_2) in
        {136}event ServerSends(v_6,cr_4,sr_2,psk_2,ps,n_2,ad_2,mesg_1);
        {137}out(io, aead_enc(a_8,ks,n_2,ad_2,mesg_1))
    ) | (
        {144}get clientSession(cr_5: random,sr_3: random,psk_3: preSharedKey,ps_1: pubkey,o_3: params,m_1: params,kc_1: ae_key,ks_1: ae_key,ems_1: bitstring,rms: bitstring) in
        {139}let nego(v_7: version,kkk_3: kex_alg,hhh_3: hash_alg,a_9: ae_alg,pt_5: psk_type) = m_1 in
        {140}in(io, (n_3: bitstring,ad_3: bitstring));
        {141}let mesg_2: bitstring = m_c(v_7,cr_5,sr_3,ps_1,psk_3) in
        {142}event ClientSends(v_7,cr_5,sr_3,psk_3,ps_1,n_3,ad_3,mesg_2);
        {143}out(io, aead_enc(a_9,kc_1,n_3,ad_3,mesg_2))
    ) | (
        {149}get serverSession(cr_6: random,sr_4: random,psk_4: preSharedKey,ps_2: pubkey,o_4: params,m_2: params,kc_2: ae_key,ks_2: ae_key,ems_2: bitstring,rms_1: bitstring) in
        {145}let nego(v_8: version,kkk_4: kex_alg,hhh_4: hash_alg,a_10: ae_alg,pt_6: psk_type) = m_2 in
        {146}in(io, (n_4: bitstring,ad_4: bitstring,c_1: bitstring));
        {147}let f_1: bitstring = aead_dec(a_10,kc_2,n_4,ad_4,c_1) in
        {148}event ServerReceives(v_8,cr_6,sr_4,psk_4,ps_2,n_4,ad_4,f_1)
    ) | (
        {155}get serverSession(cr_7: random,sr_5: random,psk_5: preSharedKey,ps_3: pubkey,o_5: params,m_3: params,kc_3: ae_key,ks_3: ae_key,ems_3: bitstring,rms_2: bitstring) in
        {150}let nego(v_9: version,kkk_5: kex_alg,hhh_5: hash_alg,a_11: ae_alg,pt_7: psk_type) = m_3 in
        {151}in(io, (n_5: bitstring,ad_5: bitstring));
        {152}let mesg_3: bitstring = m_s(v_9,cr_7,sr_5,ps_3,psk_5) in
        {153}event ServerSends(v_9,cr_7,sr_5,psk_5,ps_3,n_5,ad_5,mesg_3);
        {154}out(io, aead_enc(a_11,ks_3,n_5,ad_5,mesg_3))
    ) | (
        {160}get clientSession(cr_8: random,sr_6: random,psk_6: preSharedKey,ps_4: pubkey,o_6: params,m_4: params,kc_4: ae_key,ks_4: ae_key,ems_4: bitstring,rms_3: bitstring) in
        {156}let nego(v_10: version,kkk_6: kex_alg,hhh_6: hash_alg,a_12: ae_alg,pt_8: psk_type) = m_4 in
        {157}in(io, (n_6: bitstring,ad_6: bitstring,c_2: bitstring));
        {158}let f_2: bitstring = aead_dec(a_12,ks_4,n_6,ad_6,c_2) in
        {159}event ClientReceives(v_10,cr_8,sr_6,psk_6,ps_4,n_6,ad_6,f_2)
    )
) | (
    {161}!
    (
        {165}get clientSession(cr_9: random,sr_7: random,psk_7: preSharedKey,p_2: pubkey,o_7: params,m_5: params,ck_2: ae_key,sk_3: ae_key,cb: bitstring,ms_4: bitstring) in
        {162}let nego(v_11: version,kkk_7: kex_alg,hhh_7: hash_alg,aaa: ae_alg,ppp: psk_type) = m_5 in
        {163}in(io, =ck_2);
        {164}event ClientAEKeyLeaked(v_11,cr_9,sr_7,psk_7,p_2)
    ) | (
        {169}get serverSession(cr_10: random,sr_8: random,psk_8: preSharedKey,p_3: pubkey,o_8: params,m_6: params,ck_3: ae_key,sk_4: ae_key,cb_1: bitstring,ms_5: bitstring) in
        {166}let nego(v_12: version,kkk_8: kex_alg,hhh_8: hash_alg,aaa_1: ae_alg,ppp_1: psk_type) = m_6 in
        {167}in(io, =sk_4);
        {168}event ServerAEKeyLeaked(v_12,cr_10,sr_8,psk_8,p_3)
    ) | (
        {172}get clientSession0(cr_11: random,psk_9: preSharedKey,o_9: params,ck_4: ae_key,ems_5: bitstring) in
        {170}in(io, =ck_4);
        {171}event ClientAEKeyLeaked0(TLS13,cr_11,psk_9,o_9)
    ) | (
        {175}get serverSession0(cr_12: random,psk_10: preSharedKey,o_10: params,ck_5: ae_key,ems_6: bitstring) in
        {173}in(io, =ck_5);
        {174}event ServerAEKeyLeaked0(TLS13,cr_12,psk_10,o_10)
    )
) | (
    {176}!
    (
        {180}get clientSession0(cr_13: random,psk_11: preSharedKey,o_11: params,ck_6: ae_key,ems_7: bitstring) in
        {179}get serverSession0(cr': random,psk': preSharedKey,o': params,=ck_6,ems_8: bitstring) in
        {177}if ((cr_13 ≠ cr') || ((psk_11 ≠ psk') || (o_11 ≠ o'))) then
        {178}event MatchingAEKey0(TLS13,cr_13,psk_11,o_11,cr',psk',o')
    ) | (
        {184}get clientSession0(cr_14: random,psk_12: preSharedKey,o_12: params,ck_7: ae_key,ems_9: bitstring) in
        {183}get serverSession0(cr'_1: random,psk'_1: preSharedKey,o'_1: params,ck_8: ae_key,=ems_9) in
        {181}if ((cr_14 ≠ cr'_1) || ((psk_12 ≠ psk'_1) || (o_12 ≠ o'_1))) then
        {182}event MatchingEMS0(TLS13,cr_14,psk_12,o_12,cr'_1,psk'_1,o'_1)
    ) | (
        {190}get clientSession(cr_15: random,sr_9: random,psk_13: preSharedKey,p_4: pubkey,o_13: params,m_7: params,ck_9: ae_key,sk_5: ae_key,cb_2: bitstring,ms_6: bitstring) in
        {189}get serverSession(cr'_2: random,sr': random,psk'_2: preSharedKey,p': pubkey,o'_2: params,m': params,ck': ae_key,sk': ae_key,=cb_2,ms': bitstring) in
        {185}let nego(v_13: version,kkk_9: kex_alg,hhh_9: hash_alg,aaa_2: ae_alg,ppp_2: psk_type) = m_7 in
        {186}let nego(v': version,kkk': kex_alg,hhh': hash_alg,aaa': ae_alg,ppp': psk_type) = m' in
        {187}if ((cr_15 ≠ cr'_2) || ((sr_9 ≠ sr') || (p_4 ≠ p'))) then
        {188}event MatchingChannelBinding(v_13,cr_15,sr_9,p_4,v',cr'_2,sr',p')
    ) | (
        {196}get clientSession(cr_16: random,sr_10: random,psk_14: preSharedKey,p_5: pubkey,o_14: params,m_8: params,ck_10: ae_key,sk_6: ae_key,cb_3: bitstring,ms_7: bitstring) in
        {195}get serverSession(cr'_3: random,sr'_1: random,psk'_3: preSharedKey,p'_1: pubkey,o'_3: params,m'_1: params,ck'_1: ae_key,sk'_1: ae_key,cb': bitstring,=ms_7) in
        {191}let nego(v_14: version,kkk_10: kex_alg,hhh_10: hash_alg,aaa_3: ae_alg,ppp_3: psk_type) = m_8 in
        {192}let nego(v'_1: version,kkk'_1: kex_alg,hhh'_1: hash_alg,aaa'_1: ae_alg,ppp'_1: psk_type) = m'_1 in
        {193}if ((cr_16 ≠ cr'_3) || ((sr_10 ≠ sr'_1) || (p_5 ≠ p'_1))) then
        {194}event MatchingResumptionSecret(v_14,cr_16,sr_10,p_5,v'_1,cr'_3,sr'_1,p'_1)
    ) | (
        {202}get clientSession(cr_17: random,sr_11: random,psk_15: preSharedKey,p_6: pubkey,o_15: params,m_9: params,ck_11: ae_key,sk_7: ae_key,cb_4: bitstring,ms_8: bitstring) in
        {201}get serverSession(cr'_4: random,sr'_2: random,psk'_4: preSharedKey,p'_2: pubkey,o'_4: params,m'_2: params,=ck_11,=sk_7,cb'_1: bitstring,ms'_1: bitstring) in
        {197}let nego(v_15: version,kkk_11: kex_alg,hhh_11: hash_alg,aaa_4: ae_alg,ppp_4: psk_type) = m_9 in
        {198}let nego(v'_2: version,kkk'_2: kex_alg,hhh'_2: hash_alg,aaa'_2: ae_alg,ppp'_2: psk_type) = m'_2 in
        {199}if ((cr_17 ≠ cr'_4) || ((sr_11 ≠ sr'_2) || (p_6 ≠ p'_2))) then
        {200}event MatchingAEKey(v_15,cr_17,sr_11,p_6,v'_2,cr'_4,sr'_2,p'_2)
    )
)

--  Process 1 (that is, process 0, with let moved downwards):
(
    {1}!
    {2}new cr: random;
    {3}in(io, offer: params);
    {4}out(io, CH(cr,offer));
    {5}in(io, SH(sr: random,mode: params));
    {6}let nego(=TLS12,k: kex_alg,h: hash_alg,a: ae_alg,pt: psk_type) = mode in
    {9}in(io, CRT(p: pubkey));
    {46}get longTermKeys_tbl(sn: prin,xxx: privkey,=p) in
    {8}let log: bitstring = (CH(cr,offer),SH(sr,mode)) in
    {10}let log_1: bitstring = (log,CRT(p)) in
    {11}let DHE(g: group) = k in
    (
        {12}in(io, SKE(=g,e: element,s: bitstring));
        {14}if (verify(p,hash(h,(cr,sr,g,e)),s) = true) then
        {15}new x: bitstring;
        {16}let gx: element = catch-fail(dh_exp(g,G,x)) in
        {17}let v_1: bool = not-caught-fail(gx) in
        {18}let (x_1: bitstring,gx_1: element) = (if v_1 then (x,gx) else fail-any) in
        {19}let pms: bitstring = e2b(dh_exp(g,e,x_1)) in
        {21}out(io, CKE(e2b(gx_1)));
        {13}let log_2: bitstring = (log_1,SKE(g,e,s)) in
        {22}let log_3: bitstring = (log_2,CKE(e2b(gx_1))) in
        {20}let ms: bitstring = tls12_prf(pms,master_secret,(cr,sr)) in
        {23}let m1: bitstring = tls12_prf(ms,client_finished,log_3) in
        {24}out(io, FIN(m1));
        {26}in(io, FIN(m2: bitstring));
        {25}let log_4: bitstring = (log_3,FIN(m1)) in
        {27}if (m2 = tls12_prf(ms,server_finished,log_4)) then
        {29}let sk: ae_key = b2ae(tls12_prf(ms,server_key_expansion,(sr,cr))) in
        {28}let ck: ae_key = b2ae(tls12_prf(ms,client_key_expansion,(sr,cr))) in
        {30}event ClientFinished(TLS12,cr,sr,NoPSK,p,offer,mode,ck,sk,m1,ms);
        {31}insert clientSession(cr,sr,NoPSK,p,offer,mode,ck,sk,m1,ms)
    )
    else
        {32}let RSA(r: rsa_alg) = k in
        {33}new pms_1: bitstring;
        {35}out(io, CKE(rsa_enc(p,pms_1)));
        {36}let log_5: bitstring = (log_1,CKE(rsa_enc(p,pms_1))) in
        {34}let ms_1: bitstring = tls12_prf(pms_1,master_secret,(cr,sr)) in
        {37}let m1_1: bitstring = tls12_prf(ms_1,client_finished,log_5) in
        {38}out(io, FIN(m1_1));
        {40}in(io, FIN(m2_1: bitstring));
        {39}let log_6: bitstring = (log_5,FIN(m1_1)) in
        {41}if (m2_1 = tls12_prf(ms_1,server_finished,log_6)) then
        {43}let sk_1: ae_key = b2ae(tls12_prf(ms_1,server_key_expansion,(sr,cr))) in
        {42}let ck_1: ae_key = b2ae(tls12_prf(ms_1,client_key_expansion,(sr,cr))) in
        {44}event ClientFinished(TLS12,cr,sr,NoPSK,p,offer,mode,ck_1,sk_1,m1_1,ms_1);
        {45}insert clientSession(cr,sr,NoPSK,p,offer,mode,ck_1,sk_1,m1_1,ms_1)
) | (
    {47}!
    {48}in(io, CH(cr_1: random,offer_1: params));
    {49}in(io, SH(xxx_1: random,mode_1: params));
    {50}let nego(=TLS12,k_1: kex_alg,h_1: hash_alg,a_1: ae_alg,pt_1: psk_type) = mode_1 in
    {52}new sr_1: random;
    {53}out(io, SH(sr_1,mode_1));
    {103}get longTermKeys_tbl(sn_1: prin,sk_2: privkey,p_1: pubkey) in
    {51}let v_2: version = TLS12 in
    {55}event ServerChoosesVersion(cr_1,sr_1,p_1,v_2);
    {56}event ServerChoosesKEX(cr_1,sr_1,p_1,v_2,k_1);
    {57}event ServerChoosesAE(cr_1,sr_1,p_1,v_2,a_1);
    {58}event ServerChoosesHash(cr_1,sr_1,p_1,v_2,h_1);
    {59}out(io, CRT(p_1));
    {54}let log_7: bitstring = (CH(cr_1,offer_1),SH(sr_1,mode_1)) in
    {60}let log_8: bitstring = (log_7,CRT(p_1)) in
    {61}let DHE(g_1: group) = k_1 in
    (
        {62}new x_2: bitstring;
        {63}let gx_2: element = catch-fail(dh_exp(g_1,G,x_2)) in
        {64}let v_3: bool = not-caught-fail(gx_2) in
        {65}let (y: bitstring,gy: element) = (if v_3 then (x_2,gx_2) else fail-any) in
        {66}let sg: bitstring = sign(sk_2,hash(h_1,(cr_1,sr_1,g_1,gy))) in
        {67}out(io, SKE(g_1,gy,sg));
        {69}in(io, CKE(e2b(gx_3: element)));
        {71}let pms_2: bitstring = e2b(dh_exp(g_1,gx_3,y)) in
        {73}in(io, FIN(m1_2: bitstring));
        {72}let ms_2: bitstring = tls12_prf(pms_2,master_secret,(cr_1,sr_1)) in
        {68}let log_9: bitstring = (log_8,SKE(g_1,gy,sg)) in
        {70}let log_10: bitstring = (log_9,CKE(e2b(gx_3))) in
        {74}if (m1_2 = tls12_prf(ms_2,client_finished,log_10)) then
        {78}let sak: ae_key = b2ae(tls12_prf(ms_2,server_key_expansion,(sr_1,cr_1))) in
        {77}let cak: ae_key = b2ae(tls12_prf(ms_2,client_key_expansion,(sr_1,cr_1))) in
        {79}event ServerFinished(TLS12,cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak,sak,m1_2,ms_2);
        {75}let log_11: bitstring = (log_10,FIN(m1_2)) in
        {76}let m2_2: bitstring = tls12_prf(ms_2,server_finished,log_11) in
        {80}out(io, FIN(m2_2));
        {81}insert serverSession(cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak,sak,m1_2,ms_2);
        {82}phase 1;
        {83}event PostSessionCompromisedKey(pk(sk_2));
        {84}out(io, sk_2)
    )
    else
        {85}let RSA(r_1: rsa_alg) = k_1 in
        {86}in(io, CKE(epms: bitstring));
        {88}let success(pms_3: bitstring,leak: bitstring) = rsa_dec(r_1,sk_2,epms) in
        {89}out(io, leak);
        {91}in(io, FIN(m1_3: bitstring));
        {90}let ms_3: bitstring = tls12_prf(pms_3,master_secret,(cr_1,sr_1)) in
        {87}let log_12: bitstring = (log_8,CKE(epms)) in
        {92}if (m1_3 = tls12_prf(ms_3,client_finished,log_12)) then
        {96}let sak_1: ae_key = b2ae(tls12_prf(ms_3,server_key_expansion,(sr_1,cr_1))) in
        {95}let cak_1: ae_key = b2ae(tls12_prf(ms_3,client_key_expansion,(sr_1,cr_1))) in
        {97}event ServerFinished(TLS12,cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak_1,sak_1,m1_3,ms_3);
        {93}let log_13: bitstring = (log_12,FIN(m1_3)) in
        {94}let m2_3: bitstring = tls12_prf(ms_3,server_finished,log_13) in
        {98}out(io, FIN(m2_3));
        {99}insert serverSession(cr_1,sr_1,NoPSK,p_1,offer_1,mode_1,cak_1,sak_1,m1_3,ms_3);
        {100}phase 1;
        {101}event PostSessionCompromisedKey(pk(sk_2));
        {102}out(io, sk_2)
) | (
    {104}!
    (
        {105}event WeakOrCompromisedKey(NoPubKey)
    ) | (
        {106}in(io, a_2: prin);
        {107}new k_2: privkey;
        {108}insert longTermKeys_tbl(a_2,k_2,pk(k_2));
        {109}out(io, pk(k_2))
    ) | (
        {110}in(io, (a_3: prin,k_3: privkey));
        {111}event WeakOrCompromisedKey(pk(k_3));
        {112}insert longTermKeys_tbl(a_3,k_3,pk(k_3))
    ) | (
        {113}in(io, (a_4: prin,b: prin));
        {114}new pskAB: bitstring;
        {115}insert preSharedKeys(a_4,b,PSK(pskAB))
    ) | (
        {116}in(io, (a_5: prin,b_1: prin));
        {117}new pskAB_1: bitstring;
        {118}event CompromisedPreSharedKey(PSK(pskAB_1));
        {119}insert preSharedKeys(a_5,b_1,PSK(pskAB_1));
        {120}out(io, pskAB_1)
    )
) | (
    {121}!
    (
        {127}get clientSession0(cr_2: random,psk: preSharedKey,o: params,kc0: ae_key,ems0: bitstring) in
        {122}let nego(v_4: version,kkk: kex_alg,hhh: hash_alg,a_6: ae_alg,pt_2: psk_type) = o in
        {123}in(io, (n: bitstring,ad: bitstring));
        {124}let mesg: bitstring = m_c0(TLS13,cr_2,psk) in
        {125}event ClientSends0(TLS13,cr_2,psk,n,ad,mesg);
        {126}out(io, aead_enc(a_6,kc0,n,ad,mesg))
    ) | (
        {132}get serverSession0(cr_3: random,psk_1: preSharedKey,o_1: params,kc0_1: ae_key,ems0_1: bitstring) in
        {128}let nego(v_5: version,kkk_1: kex_alg,hhh_1: hash_alg,a_7: ae_alg,pt_3: psk_type) = o_1 in
        {129}in(io, (n_1: bitstring,ad_1: bitstring,c: bitstring));
        {130}let f: bitstring = aead_dec(a_7,kc0_1,n_1,ad_1,c) in
        {131}event ServerReceives0(TLS13,cr_3,psk_1,n_1,ad_1,f)
    ) | (
        {138}get serverSession0_5(cr_4: random,sr_2: random,psk_2: preSharedKey,ps: pubkey,o_2: params,m: params,kc: ae_key,ks: ae_key,ems: bitstring) in
        {133}let nego(v_6: version,kkk_2: kex_alg,hhh_2: hash_alg,a_8: ae_alg,pt_4: psk_type) = m in
        {134}in(io, (n_2: bitstring,ad_2: bitstring));
        {135}let mesg_1: bitstring = m_s(v_6,cr_4,sr_2,ps,psk_2) in
        {136}event ServerSends(v_6,cr_4,sr_2,psk_2,ps,n_2,ad_2,mesg_1);
        {137}out(io, aead_enc(a_8,ks,n_2,ad_2,mesg_1))
    ) | (
        {144}get clientSession(cr_5: random,sr_3: random,psk_3: preSharedKey,ps_1: pubkey,o_3: params,m_1: params,kc_1: ae_key,ks_1: ae_key,ems_1: bitstring,rms: bitstring) in
        {139}let nego(v_7: version,kkk_3: kex_alg,hhh_3: hash_alg,a_9: ae_alg,pt_5: psk_type) = m_1 in
        {140}in(io, (n_3: bitstring,ad_3: bitstring));
        {141}let mesg_2: bitstring = m_c(v_7,cr_5,sr_3,ps_1,psk_3) in
        {142}event ClientSends(v_7,cr_5,sr_3,psk_3,ps_1,n_3,ad_3,mesg_2);
        {143}out(io, aead_enc(a_9,kc_1,n_3,ad_3,mesg_2))
    ) | (
        {149}get serverSession(cr_6: random,sr_4: random,psk_4: preSharedKey,ps_2: pubkey,o_4: params,m_2: params,kc_2: ae_key,ks_2: ae_key,ems_2: bitstring,rms_1: bitstring) in
        {145}let nego(v_8: version,kkk_4: kex_alg,hhh_4: hash_alg,a_10: ae_alg,pt_6: psk_type) = m_2 in
        {146}in(io, (n_4: bitstring,ad_4: bitstring,c_1: bitstring));
        {147}let f_1: bitstring = aead_dec(a_10,kc_2,n_4,ad_4,c_1) in
        {148}event ServerReceives(v_8,cr_6,sr_4,psk_4,ps_2,n_4,ad_4,f_1)
    ) | (
        {155}get serverSession(cr_7: random,sr_5: random,psk_5: preSharedKey,ps_3: pubkey,o_5: params,m_3: params,kc_3: ae_key,ks_3: ae_key,ems_3: bitstring,rms_2: bitstring) in
        {150}let nego(v_9: version,kkk_5: kex_alg,hhh_5: hash_alg,a_11: ae_alg,pt_7: psk_type) = m_3 in
        {151}in(io, (n_5: bitstring,ad_5: bitstring));
        {152}let mesg_3: bitstring = m_s(v_9,cr_7,sr_5,ps_3,psk_5) in
        {153}event ServerSends(v_9,cr_7,sr_5,psk_5,ps_3,n_5,ad_5,mesg_3);
        {154}out(io, aead_enc(a_11,ks_3,n_5,ad_5,mesg_3))
    ) | (
        {160}get clientSession(cr_8: random,sr_6: random,psk_6: preSharedKey,ps_4: pubkey,o_6: params,m_4: params,kc_4: ae_key,ks_4: ae_key,ems_4: bitstring,rms_3: bitstring) in
        {156}let nego(v_10: version,kkk_6: kex_alg,hhh_6: hash_alg,a_12: ae_alg,pt_8: psk_type) = m_4 in
        {157}in(io, (n_6: bitstring,ad_6: bitstring,c_2: bitstring));
        {158}let f_2: bitstring = aead_dec(a_12,ks_4,n_6,ad_6,c_2) in
        {159}event ClientReceives(v_10,cr_8,sr_6,psk_6,ps_4,n_6,ad_6,f_2)
    )
) | (
    {161}!
    (
        {165}get clientSession(cr_9: random,sr_7: random,psk_7: preSharedKey,p_2: pubkey,o_7: params,m_5: params,ck_2: ae_key,sk_3: ae_key,cb: bitstring,ms_4: bitstring) in
        {162}let nego(v_11: version,kkk_7: kex_alg,hhh_7: hash_alg,aaa: ae_alg,ppp: psk_type) = m_5 in
        {163}in(io, =ck_2);
        {164}event ClientAEKeyLeaked(v_11,cr_9,sr_7,psk_7,p_2)
    ) | (
        {169}get serverSession(cr_10: random,sr_8: random,psk_8: preSharedKey,p_3: pubkey,o_8: params,m_6: params,ck_3: ae_key,sk_4: ae_key,cb_1: bitstring,ms_5: bitstring) in
        {166}let nego(v_12: version,kkk_8: kex_alg,hhh_8: hash_alg,aaa_1: ae_alg,ppp_1: psk_type) = m_6 in
        {167}in(io, =sk_4);
        {168}event ServerAEKeyLeaked(v_12,cr_10,sr_8,psk_8,p_3)
    ) | (
        {172}get clientSession0(cr_11: random,psk_9: preSharedKey,o_9: params,ck_4: ae_key,ems_5: bitstring) in
        {170}in(io, =ck_4);
        {171}event ClientAEKeyLeaked0(TLS13,cr_11,psk_9,o_9)
    ) | (
        {175}get serverSession0(cr_12: random,psk_10: preSharedKey,o_10: params,ck_5: ae_key,ems_6: bitstring) in
        {173}in(io, =ck_5);
        {174}event ServerAEKeyLeaked0(TLS13,cr_12,psk_10,o_10)
    )
) | (
    {176}!
    (
        {180}get clientSession0(cr_13: random,psk_11: preSharedKey,o_11: params,ck_6: ae_key,ems_7: bitstring) in
        {179}get serverSession0(cr': random,psk': preSharedKey,o': params,=ck_6,ems_8: bitstring) in
        {177}if ((cr_13 ≠ cr') || ((psk_11 ≠ psk') || (o_11 ≠ o'))) then
        {178}event MatchingAEKey0(TLS13,cr_13,psk_11,o_11,cr',psk',o')
    ) | (
        {184}get clientSession0(cr_14: random,psk_12: preSharedKey,o_12: params,ck_7: ae_key,ems_9: bitstring) in
        {183}get serverSession0(cr'_1: random,psk'_1: preSharedKey,o'_1: params,ck_8: ae_key,=ems_9) in
        {181}if ((cr_14 ≠ cr'_1) || ((psk_12 ≠ psk'_1) || (o_12 ≠ o'_1))) then
        {182}event MatchingEMS0(TLS13,cr_14,psk_12,o_12,cr'_1,psk'_1,o'_1)
    ) | (
        {190}get clientSession(cr_15: random,sr_9: random,psk_13: preSharedKey,p_4: pubkey,o_13: params,m_7: params,ck_9: ae_key,sk_5: ae_key,cb_2: bitstring,ms_6: bitstring) in
        {189}get serverSession(cr'_2: random,sr': random,psk'_2: preSharedKey,p': pubkey,o'_2: params,m': params,ck': ae_key,sk': ae_key,=cb_2,ms': bitstring) in
        {185}let nego(v_13: version,kkk_9: kex_alg,hhh_9: hash_alg,aaa_2: ae_alg,ppp_2: psk_type) = m_7 in
        {186}let nego(v': version,kkk': kex_alg,hhh': hash_alg,aaa': ae_alg,ppp': psk_type) = m' in
        {187}if ((cr_15 ≠ cr'_2) || ((sr_9 ≠ sr') || (p_4 ≠ p'))) then
        {188}event MatchingChannelBinding(v_13,cr_15,sr_9,p_4,v',cr'_2,sr',p')
    ) | (
        {196}get clientSession(cr_16: random,sr_10: random,psk_14: preSharedKey,p_5: pubkey,o_14: params,m_8: params,ck_10: ae_key,sk_6: ae_key,cb_3: bitstring,ms_7: bitstring) in
        {195}get serverSession(cr'_3: random,sr'_1: random,psk'_3: preSharedKey,p'_1: pubkey,o'_3: params,m'_1: params,ck'_1: ae_key,sk'_1: ae_key,cb': bitstring,=ms_7) in
        {191}let nego(v_14: version,kkk_10: kex_alg,hhh_10: hash_alg,aaa_3: ae_alg,ppp_3: psk_type) = m_8 in
        {192}let nego(v'_1: version,kkk'_1: kex_alg,hhh'_1: hash_alg,aaa'_1: ae_alg,ppp'_1: psk_type) = m'_1 in
        {193}if ((cr_16 ≠ cr'_3) || ((sr_10 ≠ sr'_1) || (p_5 ≠ p'_1))) then
        {194}event MatchingResumptionSecret(v_14,cr_16,sr_10,p_5,v'_1,cr'_3,sr'_1,p'_1)
    ) | (
        {202}get clientSession(cr_17: random,sr_11: random,psk_15: preSharedKey,p_6: pubkey,o_15: params,m_9: params,ck_11: ae_key,sk_7: ae_key,cb_4: bitstring,ms_8: bitstring) in
        {201}get serverSession(cr'_4: random,sr'_2: random,psk'_4: preSharedKey,p'_2: pubkey,o'_4: params,m'_2: params,=ck_11,=sk_7,cb'_1: bitstring,ms'_1: bitstring) in
        {197}let nego(v_15: version,kkk_11: kex_alg,hhh_11: hash_alg,aaa_4: ae_alg,ppp_4: psk_type) = m_9 in
        {198}let nego(v'_2: version,kkk'_2: kex_alg,hhh'_2: hash_alg,aaa'_2: ae_alg,ppp'_2: psk_type) = m'_2 in
        {199}if ((cr_17 ≠ cr'_4) || ((sr_11 ≠ sr'_2) || (p_6 ≠ p'_2))) then
        {200}event MatchingAEKey(v_15,cr_17,sr_11,p_6,v'_2,cr'_4,sr'_2,p'_2)
    )
)

-- Query event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 137 rules.
400 rules inserted. Base: 370 rules (162 with conclusion selected). Queue: 79 rules.
600 rules inserted. Base: 496 rules (191 with conclusion selected). Queue: 217 rules.
800 rules inserted. Base: 547 rules (198 with conclusion selected). Queue: 245 rules.
1000 rules inserted. Base: 613 rules (208 with conclusion selected). Queue: 250 rules.
1200 rules inserted. Base: 693 rules (228 with conclusion selected). Queue: 297 rules.
1400 rules inserted. Base: 727 rules (233 with conclusion selected). Queue: 289 rules.
1600 rules inserted. Base: 772 rules (257 with conclusion selected). Queue: 273 rules.
1800 rules inserted. Base: 830 rules (293 with conclusion selected). Queue: 250 rules.
2000 rules inserted. Base: 929 rules (344 with conclusion selected). Queue: 206 rules.
2200 rules inserted. Base: 1047 rules (409 with conclusion selected). Queue: 198 rules.
2400 rules inserted. Base: 1132 rules (448 with conclusion selected). Queue: 188 rules.
2600 rules inserted. Base: 1227 rules (505 with conclusion selected). Queue: 157 rules.
2800 rules inserted. Base: 1306 rules (541 with conclusion selected). Queue: 188 rules.
3000 rules inserted. Base: 1343 rules (554 with conclusion selected). Queue: 147 rules.
3200 rules inserted. Base: 1358 rules (569 with conclusion selected). Queue: 87 rules.
3400 rules inserted. Base: 1446 rules (607 with conclusion selected). Queue: 30 rules.
Starting query event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9))
goal reachable: attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(r_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(m_10) -> end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid]

1. We assume as hypothesis that
attacker(m_10).

2. We assume as hypothesis that
attacker(pt_9).

3. We assume as hypothesis that
attacker(a_13).

4. We assume as hypothesis that
attacker(h_2).

5. We assume as hypothesis that
attacker(r_2).

6. By 5, the attacker may know r_2.
Using the function RSA the attacker may obtain RSA(r_2).
attacker(RSA(r_2)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know RSA(r_2).
By 4, the attacker may know h_2.
By 3, the attacker may know a_13.
By 2, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
attacker(nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).

11. We assume as hypothesis that
attacker(xxx_2).

12. By 11, the attacker may know xxx_2.
Using the function pk the attacker may obtain pk(xxx_2).
attacker(pk(xxx_2)).

13. By 12, the attacker may know pk(xxx_2).
Using the function CRT the attacker may obtain CRT(pk(xxx_2)).
attacker(CRT(pk(xxx_2))).

14. We assume as hypothesis that
attacker(sn_2).

15. By 14, the attacker may know sn_2.
By 11, the attacker may know xxx_2.
Using the function 2-tuple the attacker may obtain (sn_2,xxx_2).
attacker((sn_2,xxx_2)).

16. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

17. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

18. The message m_10 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 17 may be read at get {46}.
So the message CKE(rsa_enc(pk(xxx_2),pms_4)) may be sent to the attacker at output {35}.
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

19. By 18, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 1-proj-CKE the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

20. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

21. By 20, the attacker may know WeakRSADecryption.
By 11, the attacker may know xxx_2.
By 19, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function rsa_dec the attacker may obtain success(pms_4,(pms_4,sign(xxx_2,pms_4))).
attacker(success(pms_4,(pms_4,sign(xxx_2,pms_4)))).

22. By 21, the attacker may know success(pms_4,(pms_4,sign(xxx_2,pms_4))).
Using the function 1-proj-success the attacker may obtain pms_4.
attacker(pms_4).

23. By 12, the attacker may know pk(xxx_2).
By 22, the attacker may know pms_4.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

24. By 23, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(xxx_2),pms_4)).
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

25. The attacker has some term offer_2.
attacker(offer_2).

26. The message offer_2 that the attacker may have by 25 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

27. By 26, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

28. By 27, the attacker may know cr_18.
By 1, the attacker may know m_10.
Using the function CH the attacker may obtain CH(cr_18,m_10).
attacker(CH(cr_18,m_10)).

29. By 28, the attacker may know CH(cr_18,m_10).
By 10, the attacker may know SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
attacker((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)))).

30. By 29, the attacker may know (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
By 13, the attacker may know CRT(pk(xxx_2)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
attacker(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2)))).

31. By 30, the attacker may know ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
By 24, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
attacker((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).

32. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

33. By 27, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

34. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

35. By 22, the attacker may know pms_4.
By 34, the attacker may know master_secret.
By 33, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
attacker(tls12_prf(pms_4,master_secret,(cr_18,sr_12))).

36. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 32, the attacker may know client_finished.
By 31, the attacker may know (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).

37. By 36, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).

38. By 31, the attacker may know (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
By 37, the attacker may know FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
attacker(((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).

39. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

40. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 39, the attacker may know server_finished.
By 38, the attacker may know ((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).

41. By 40, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))))).

42. The message m_10 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 16 may be read at get {46}.
The message FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))) that the attacker may have by 41 may be received at input {40}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))) may be executed at {44}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).

43. By 42, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).


Unified offer_2 with m_10
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(m_10) && attacker(pt_9) && attacker(a_13) && attacker(h_2) && attacker(r_2) && attacker(sr_12) && attacker(xxx_2) && attacker(sn_2) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_key_expansion,(sr_12,cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),server_key_expansion,(sr_12,cr[!1 = @sid]))),tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_finished,(((CH(cr[!1 = @sid],m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid])))),tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_14

new cr: random creating cr_18 at {2} in copy a_15

in(io, a_16) at {3} in copy a_15

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_16 at {4} in copy a_15

in(io, SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))) at {5} in copy a_15

in(io, CRT(pk(a_22))) at {9} in copy a_15

in(io, (a_23,a_22)) at {110} in copy a_14

event WeakOrCompromisedKey(pk(a_22)) at {111} in copy a_14

insert longTermKeys_tbl(a_23,a_22,pk(a_22)) at {112} in copy a_14

get longTermKeys_tbl(a_23,a_22,pk(a_22)) at {46} in copy a_15

new pms_1: bitstring creating pms_4 at {33} in copy a_15

out(io, CKE(~M_2)) with ~M_2 = rsa_enc(pk(a_22),pms_4) at {35} in copy a_15

out(io, FIN(~M_3)) with ~M_3 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))) at {38} in copy a_15

in(io, FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))))) with tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))) = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_finished,((((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))))))) at {40} in copy a_15

event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) at {44} in copy a_15 (goal)

The event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) is executed at {44} in copy a_15.
A trace has been found.
RESULT event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.
-- Query event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 137 rules.
400 rules inserted. Base: 370 rules (162 with conclusion selected). Queue: 77 rules.
600 rules inserted. Base: 490 rules (191 with conclusion selected). Queue: 192 rules.
800 rules inserted. Base: 552 rules (203 with conclusion selected). Queue: 235 rules.
1000 rules inserted. Base: 623 rules (208 with conclusion selected). Queue: 227 rules.
1200 rules inserted. Base: 670 rules (232 with conclusion selected). Queue: 242 rules.
1400 rules inserted. Base: 732 rules (251 with conclusion selected). Queue: 242 rules.
1600 rules inserted. Base: 760 rules (269 with conclusion selected). Queue: 205 rules.
1800 rules inserted. Base: 869 rules (335 with conclusion selected). Queue: 179 rules.
2000 rules inserted. Base: 986 rules (393 with conclusion selected). Queue: 161 rules.
2200 rules inserted. Base: 1063 rules (430 with conclusion selected). Queue: 128 rules.
2400 rules inserted. Base: 1107 rules (488 with conclusion selected). Queue: 74 rules.
2600 rules inserted. Base: 1203 rules (504 with conclusion selected). Queue: 50 rules.
2800 rules inserted. Base: 1340 rules (535 with conclusion selected). Queue: 13 rules.
Starting query event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5))
RESULT event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) is true.
-- Query not event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 376 rules (162 with conclusion selected). Queue: 78 rules.
600 rules inserted. Base: 494 rules (191 with conclusion selected). Queue: 220 rules.
800 rules inserted. Base: 546 rules (198 with conclusion selected). Queue: 250 rules.
1000 rules inserted. Base: 606 rules (208 with conclusion selected). Queue: 260 rules.
1200 rules inserted. Base: 681 rules (233 with conclusion selected). Queue: 308 rules.
1400 rules inserted. Base: 713 rules (235 with conclusion selected). Queue: 289 rules.
1600 rules inserted. Base: 763 rules (261 with conclusion selected). Queue: 272 rules.
1800 rules inserted. Base: 817 rules (299 with conclusion selected). Queue: 236 rules.
2000 rules inserted. Base: 920 rules (348 with conclusion selected). Queue: 191 rules.
2200 rules inserted. Base: 1042 rules (411 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1121 rules (448 with conclusion selected). Queue: 128 rules.
2600 rules inserted. Base: 1162 rules (506 with conclusion selected). Queue: 61 rules.
2800 rules inserted. Base: 1276 rules (521 with conclusion selected). Queue: 29 rules.
Starting query not event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9))
goal reachable: attacker(pms_4) && attacker(k_4) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(m_10) -> end(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),m_10,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
Abbreviations:
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = m_10,cr_1 = cr_18,!1 = @sid]

Derivation:
Abbreviations:
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = m_10,cr_1 = cr_18,!1 = @sid]

1. We assume as hypothesis that
attacker(m_10).

2. We assume as hypothesis that
attacker(cr_18).

3. By 2, the attacker may know cr_18.
By 1, the attacker may know m_10.
Using the function CH the attacker may obtain CH(cr_18,m_10).
attacker(CH(cr_18,m_10)).

4. We assume as hypothesis that
attacker(pt_9).

5. We assume as hypothesis that
attacker(a_13).

6. We assume as hypothesis that
attacker(h_2).

7. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

8. By 7, the attacker may know WeakRSADecryption.
Using the function RSA the attacker may obtain RSA(WeakRSADecryption).
attacker(RSA(WeakRSADecryption)).

9. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

10. By 9, the attacker may know TLS12.
By 8, the attacker may know RSA(WeakRSADecryption).
By 6, the attacker may know h_2.
By 5, the attacker may know a_13.
By 4, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9).
attacker(nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)).

11. We assume as hypothesis that
attacker(xxx_2).

12. By 11, the attacker may know xxx_2.
By 10, the attacker may know nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)).
attacker(SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))).

13. We assume as hypothesis that
attacker(k_4).

14. The attacker has some term sn_2.
attacker(sn_2).

15. By 14, the attacker may know sn_2.
By 13, the attacker may know k_4.
Using the function 2-tuple the attacker may obtain (sn_2,k_4).
attacker((sn_2,k_4)).

16. The message (sn_2,k_4) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

17. We assume as hypothesis that
attacker(pms_4).

18. By 13, the attacker may know k_4.
Using the function pk the attacker may obtain pk(k_4).
attacker(pk(k_4)).

19. By 18, the attacker may know pk(k_4).
By 17, the attacker may know pms_4.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(k_4),pms_4).
attacker(rsa_enc(pk(k_4),pms_4)).

20. By 19, the attacker may know rsa_enc(pk(k_4),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_4),pms_4)).
attacker(CKE(rsa_enc(pk(k_4),pms_4))).

21. By 18, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

22. The message CH(cr_18,m_10) that the attacker may have by 3 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)) that the attacker may have by 12 may be received at input {49}.
So the message SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)) may be sent to the attacker at output {53}.
attacker(SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))).

23. By 22, the attacker may know SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)).
Using the function 1-proj-SH the attacker may obtain sr_12.
attacker(sr_12).

24. By 23, the attacker may know sr_12.
By 10, the attacker may know nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))).

25. By 3, the attacker may know CH(cr_18,m_10).
By 24, the attacker may know SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))).
attacker((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)))).

26. By 25, the attacker may know (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))).
By 21, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))).
attacker(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4)))).

27. By 26, the attacker may know ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))).
By 20, the attacker may know CKE(rsa_enc(pk(k_4),pms_4)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))).
attacker((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).

28. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

29. By 2, the attacker may know cr_18.
By 23, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

30. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

31. By 17, the attacker may know pms_4.
By 30, the attacker may know master_secret.
By 29, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
attacker(tls12_prf(pms_4,master_secret,(cr_18,sr_12))).

32. By 31, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 28, the attacker may know client_finished.
By 27, the attacker may know (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))).

33. By 32, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))).

34. The message CH(cr_18,m_10) that the attacker may have by 3 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9)) that the attacker may have by 12 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 16 may be read at get {103}.
The message CKE(rsa_enc(pk(k_4),pms_4)) that the attacker may have by 20 may be received at input {86}.
The message FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))) that the attacker may have by 33 may be received at input {91}.
So event ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),m_10,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))) may be executed at {97}.
end(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),m_10,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).

35. By 34, end(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),m_10,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),m_10,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).


A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

in(io, CH(a_14,a_15)) at {48} in copy a_16

in(io, SH(a_17,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))) at {49} in copy a_16

new sr_1: random creating sr_12 at {52} in copy a_16

out(io, SH(~M,nego(~M_1,RSA(~M_2),~M_3,~M_4,~M_5))) with ~M = sr_12, ~M_1 = TLS12, ~M_2 = WeakRSADecryption, ~M_3 = a_18, ~M_4 = a_19, ~M_5 = a_20 at {53} in copy a_16

in(io, (a_21,a_22)) at {110} in copy a_13

event WeakOrCompromisedKey(pk(a_22)) at {111} in copy a_13

insert longTermKeys_tbl(a_21,a_22,pk(a_22)) at {112} in copy a_13

get longTermKeys_tbl(a_21,a_22,pk(a_22)) at {103} in copy a_16

event ServerChoosesVersion(a_14,sr_12,pk(a_22),TLS12) at {55} in copy a_16

event ServerChoosesKEX(a_14,sr_12,pk(a_22),TLS12,RSA(WeakRSADecryption)) at {56} in copy a_16

event ServerChoosesAE(a_14,sr_12,pk(a_22),TLS12,a_19) at {57} in copy a_16

event ServerChoosesHash(a_14,sr_12,pk(a_22),TLS12,a_18) at {58} in copy a_16

out(io, CRT(~M_6)) with ~M_6 = pk(a_22) at {59} in copy a_16

in(io, CKE(rsa_enc(pk(a_22),a_23))) at {86} in copy a_16

out(io, (~M_7,~M_8)) with ~M_7 = a_23, ~M_8 = sign(a_22,a_23) at {89} in copy a_16

in(io, FIN(tls12_prf(tls12_prf(a_23,master_secret,(a_14,~M)),client_finished,(((CH(a_14,a_15),SH(~M,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),a_23)))))) with tls12_prf(tls12_prf(a_23,master_secret,(a_14,~M)),client_finished,(((CH(a_14,a_15),SH(~M,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),a_23)))) = tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),client_finished,(((CH(a_14,a_15),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),a_23)))) at {91} in copy a_16

event ServerFinished(TLS12,a_14,sr_12,NoPSK,pk(a_22),a_15,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20),b2ae(tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),client_key_expansion,(sr_12,a_14))),b2ae(tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),server_key_expansion,(sr_12,a_14))),tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),client_finished,(((CH(a_14,a_15),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),a_23)))),tls12_prf(a_23,master_secret,(a_14,sr_12))) at {97} in copy a_16 (goal)

The event ServerFinished(TLS12,a_14,sr_12,NoPSK,pk(a_22),a_15,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20),b2ae(tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),client_key_expansion,(sr_12,a_14))),b2ae(tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),server_key_expansion,(sr_12,a_14))),tls12_prf(tls12_prf(a_23,master_secret,(a_14,sr_12)),client_finished,(((CH(a_14,a_15),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),a_18,a_19,a_20))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),a_23)))),tls12_prf(a_23,master_secret,(a_14,sr_12))) is executed at {97} in copy a_16.
A trace has been found.
RESULT not event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.
-- Query not event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 137 rules.
400 rules inserted. Base: 370 rules (162 with conclusion selected). Queue: 77 rules.
600 rules inserted. Base: 490 rules (191 with conclusion selected). Queue: 192 rules.
800 rules inserted. Base: 552 rules (203 with conclusion selected). Queue: 235 rules.
1000 rules inserted. Base: 623 rules (208 with conclusion selected). Queue: 227 rules.
1200 rules inserted. Base: 670 rules (232 with conclusion selected). Queue: 242 rules.
1400 rules inserted. Base: 732 rules (251 with conclusion selected). Queue: 242 rules.
1600 rules inserted. Base: 760 rules (269 with conclusion selected). Queue: 205 rules.
1800 rules inserted. Base: 869 rules (335 with conclusion selected). Queue: 179 rules.
2000 rules inserted. Base: 986 rules (393 with conclusion selected). Queue: 161 rules.
2200 rules inserted. Base: 1063 rules (430 with conclusion selected). Queue: 128 rules.
2400 rules inserted. Base: 1107 rules (488 with conclusion selected). Queue: 74 rules.
2600 rules inserted. Base: 1203 rules (504 with conclusion selected). Queue: 50 rules.
2800 rules inserted. Base: 1340 rules (535 with conclusion selected). Queue: 13 rules.
Starting query not event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9))
goal reachable: attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(r_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(m_10) -> end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid]

1. We assume as hypothesis that
attacker(m_10).

2. We assume as hypothesis that
attacker(pt_9).

3. We assume as hypothesis that
attacker(a_13).

4. We assume as hypothesis that
attacker(h_2).

5. We assume as hypothesis that
attacker(r_2).

6. By 5, the attacker may know r_2.
Using the function RSA the attacker may obtain RSA(r_2).
attacker(RSA(r_2)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know RSA(r_2).
By 4, the attacker may know h_2.
By 3, the attacker may know a_13.
By 2, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
attacker(nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).

11. We assume as hypothesis that
attacker(xxx_2).

12. By 11, the attacker may know xxx_2.
Using the function pk the attacker may obtain pk(xxx_2).
attacker(pk(xxx_2)).

13. By 12, the attacker may know pk(xxx_2).
Using the function CRT the attacker may obtain CRT(pk(xxx_2)).
attacker(CRT(pk(xxx_2))).

14. We assume as hypothesis that
attacker(sn_2).

15. By 14, the attacker may know sn_2.
By 11, the attacker may know xxx_2.
Using the function 2-tuple the attacker may obtain (sn_2,xxx_2).
attacker((sn_2,xxx_2)).

16. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

17. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

18. The message m_10 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 17 may be read at get {46}.
So the message CKE(rsa_enc(pk(xxx_2),pms_4)) may be sent to the attacker at output {35}.
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

19. By 18, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 1-proj-CKE the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

20. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

21. By 20, the attacker may know WeakRSADecryption.
By 11, the attacker may know xxx_2.
By 19, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function rsa_dec the attacker may obtain success(pms_4,(pms_4,sign(xxx_2,pms_4))).
attacker(success(pms_4,(pms_4,sign(xxx_2,pms_4)))).

22. By 21, the attacker may know success(pms_4,(pms_4,sign(xxx_2,pms_4))).
Using the function 1-proj-success the attacker may obtain pms_4.
attacker(pms_4).

23. By 12, the attacker may know pk(xxx_2).
By 22, the attacker may know pms_4.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

24. By 23, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(xxx_2),pms_4)).
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

25. The attacker has some term offer_2.
attacker(offer_2).

26. The message offer_2 that the attacker may have by 25 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

27. By 26, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

28. By 27, the attacker may know cr_18.
By 1, the attacker may know m_10.
Using the function CH the attacker may obtain CH(cr_18,m_10).
attacker(CH(cr_18,m_10)).

29. By 28, the attacker may know CH(cr_18,m_10).
By 10, the attacker may know SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
attacker((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)))).

30. By 29, the attacker may know (CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
By 13, the attacker may know CRT(pk(xxx_2)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
attacker(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2)))).

31. By 30, the attacker may know ((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
By 24, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
attacker((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).

32. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

33. By 27, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

34. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

35. By 22, the attacker may know pms_4.
By 34, the attacker may know master_secret.
By 33, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
attacker(tls12_prf(pms_4,master_secret,(cr_18,sr_12))).

36. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 32, the attacker may know client_finished.
By 31, the attacker may know (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).

37. By 36, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).

38. By 31, the attacker may know (((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
By 37, the attacker may know FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
attacker(((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).

39. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

40. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 39, the attacker may know server_finished.
By 38, the attacker may know ((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).

41. By 40, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))))).

42. The message m_10 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 16 may be read at get {46}.
The message FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))) that the attacker may have by 41 may be received at input {40}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))) may be executed at {44}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).

43. By 42, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).


Unified offer_2 with m_10
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(m_10) && attacker(pt_9) && attacker(a_13) && attacker(h_2) && attacker(r_2) && attacker(sr_12) && attacker(xxx_2) && attacker(sn_2) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(xxx_2),m_10,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_key_expansion,(sr_12,cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),server_key_expansion,(sr_12,cr[!1 = @sid]))),tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_finished,(((CH(cr[!1 = @sid],m_10),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid])))),tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = m_10,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_14

new cr: random creating cr_18 at {2} in copy a_15

in(io, a_16) at {3} in copy a_15

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_16 at {4} in copy a_15

in(io, SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))) at {5} in copy a_15

in(io, CRT(pk(a_22))) at {9} in copy a_15

in(io, (a_23,a_22)) at {110} in copy a_14

event WeakOrCompromisedKey(pk(a_22)) at {111} in copy a_14

insert longTermKeys_tbl(a_23,a_22,pk(a_22)) at {112} in copy a_14

get longTermKeys_tbl(a_23,a_22,pk(a_22)) at {46} in copy a_15

new pms_1: bitstring creating pms_4 at {33} in copy a_15

out(io, CKE(~M_2)) with ~M_2 = rsa_enc(pk(a_22),pms_4) at {35} in copy a_15

out(io, FIN(~M_3)) with ~M_3 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))) at {38} in copy a_15

in(io, FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))))) with tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))) = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_finished,((((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))))))) at {40} in copy a_15

event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) at {44} in copy a_15 (goal)

The event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) is executed at {44} in copy a_15.
A trace has been found.
RESULT not event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.
-- Query not event(ServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 376 rules (162 with conclusion selected). Queue: 78 rules.
600 rules inserted. Base: 494 rules (191 with conclusion selected). Queue: 220 rules.
800 rules inserted. Base: 546 rules (198 with conclusion selected). Queue: 250 rules.
1000 rules inserted. Base: 606 rules (208 with conclusion selected). Queue: 260 rules.
1200 rules inserted. Base: 681 rules (233 with conclusion selected). Queue: 308 rules.
1400 rules inserted. Base: 713 rules (235 with conclusion selected). Queue: 289 rules.
1600 rules inserted. Base: 763 rules (261 with conclusion selected). Queue: 272 rules.
1800 rules inserted. Base: 817 rules (299 with conclusion selected). Queue: 236 rules.
2000 rules inserted. Base: 920 rules (348 with conclusion selected). Queue: 191 rules.
2200 rules inserted. Base: 1042 rules (411 with conclusion selected). Queue: 160 rules.
2400 rules inserted. Base: 1121 rules (448 with conclusion selected). Queue: 128 rules.
2600 rules inserted. Base: 1162 rules (506 with conclusion selected). Queue: 61 rules.
2800 rules inserted. Base: 1276 rules (521 with conclusion selected). Queue: 29 rules.
Starting query not event(ServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9))
RESULT not event(ServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is true.
-- Query not event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 128 rules.
400 rules inserted. Base: 373 rules (172 with conclusion selected). Queue: 88 rules.
600 rules inserted. Base: 476 rules (194 with conclusion selected). Queue: 167 rules.
800 rules inserted. Base: 541 rules (206 with conclusion selected). Queue: 201 rules.
1000 rules inserted. Base: 612 rules (222 with conclusion selected). Queue: 220 rules.
1200 rules inserted. Base: 661 rules (240 with conclusion selected). Queue: 208 rules.
1400 rules inserted. Base: 696 rules (263 with conclusion selected). Queue: 198 rules.
1600 rules inserted. Base: 796 rules (320 with conclusion selected). Queue: 175 rules.
1800 rules inserted. Base: 912 rules (381 with conclusion selected). Queue: 142 rules.
2000 rules inserted. Base: 989 rules (417 with conclusion selected). Queue: 108 rules.
2200 rules inserted. Base: 1030 rules (471 with conclusion selected). Queue: 39 rules.
2400 rules inserted. Base: 1159 rules (499 with conclusion selected). Queue: 25 rules.
Starting query not event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5))
RESULT not event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) is true.
-- Query not event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 137 rules.
400 rules inserted. Base: 370 rules (162 with conclusion selected). Queue: 77 rules.
600 rules inserted. Base: 490 rules (191 with conclusion selected). Queue: 192 rules.
800 rules inserted. Base: 552 rules (203 with conclusion selected). Queue: 235 rules.
1000 rules inserted. Base: 623 rules (208 with conclusion selected). Queue: 227 rules.
1200 rules inserted. Base: 670 rules (232 with conclusion selected). Queue: 242 rules.
1400 rules inserted. Base: 732 rules (251 with conclusion selected). Queue: 242 rules.
1600 rules inserted. Base: 760 rules (269 with conclusion selected). Queue: 205 rules.
1800 rules inserted. Base: 869 rules (335 with conclusion selected). Queue: 179 rules.
2000 rules inserted. Base: 986 rules (393 with conclusion selected). Queue: 161 rules.
2200 rules inserted. Base: 1063 rules (430 with conclusion selected). Queue: 128 rules.
2400 rules inserted. Base: 1107 rules (488 with conclusion selected). Queue: 74 rules.
2600 rules inserted. Base: 1203 rules (504 with conclusion selected). Queue: 50 rules.
2800 rules inserted. Base: 1340 rules (535 with conclusion selected). Queue: 13 rules.
Starting query not event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9))
RESULT not event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is true.
-- Query not event(MatchingResumptionSecret(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 131 rules.
400 rules inserted. Base: 375 rules (171 with conclusion selected). Queue: 89 rules.
600 rules inserted. Base: 479 rules (194 with conclusion selected). Queue: 167 rules.
800 rules inserted. Base: 543 rules (205 with conclusion selected). Queue: 198 rules.
1000 rules inserted. Base: 612 rules (220 with conclusion selected). Queue: 213 rules.
1200 rules inserted. Base: 662 rules (240 with conclusion selected). Queue: 219 rules.
1400 rules inserted. Base: 705 rules (259 with conclusion selected). Queue: 241 rules.
1600 rules inserted. Base: 813 rules (301 with conclusion selected). Queue: 216 rules.
1800 rules inserted. Base: 931 rules (369 with conclusion selected). Queue: 211 rules.
2000 rules inserted. Base: 1037 rules (405 with conclusion selected). Queue: 165 rules.
2200 rules inserted. Base: 1115 rules (449 with conclusion selected). Queue: 112 rules.
2400 rules inserted. Base: 1171 rules (496 with conclusion selected). Queue: 32 rules.
2600 rules inserted. Base: 1307 rules (528 with conclusion selected). Queue: 21 rules.
Starting query not event(MatchingResumptionSecret(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3))
goal reachable: k_4 ≠ k_5 && attacker(k_5) && attacker(k_4) && attacker(xxx_2) && attacker(hhh'_3) && attacker(aaa'_3) && attacker(ppp'_3) && attacker(o'_5) -> end(MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr_18,!1 = @sid_1]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr_18,!1 = @sid_1]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function StrongHash the attacker may obtain StrongHash.
attacker(StrongHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(o'_5).

10. The attacker has some term offer_2.
attacker(offer_2).

11. The message offer_2 that the attacker may have by 10 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

12. By 11, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

13. By 12, the attacker may know cr_18.
By 9, the attacker may know o'_5.
Using the function CH the attacker may obtain CH(cr_18,o'_5).
attacker(CH(cr_18,o'_5)).

14. We assume as hypothesis that
attacker(ppp'_3).

15. We assume as hypothesis that
attacker(aaa'_3).

16. We assume as hypothesis that
attacker(hhh'_3).

17. Using the function StrongRSADecryption the attacker may obtain StrongRSADecryption.
attacker(StrongRSADecryption).

18. By 17, the attacker may know StrongRSADecryption.
Using the function RSA the attacker may obtain RSA(StrongRSADecryption).
attacker(RSA(StrongRSADecryption)).

19. By 7, the attacker may know TLS12.
By 18, the attacker may know RSA(StrongRSADecryption).
By 16, the attacker may know hhh'_3.
By 15, the attacker may know aaa'_3.
By 14, the attacker may know ppp'_3.
Using the function nego the attacker may obtain nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3).
attacker(nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).

20. We assume as hypothesis that
attacker(xxx_2).

21. By 20, the attacker may know xxx_2.
By 19, the attacker may know nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
attacker(SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).

22. The message CH(cr_18,o'_5) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) that the attacker may have by 21 may be received at input {49}.
So the message SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) may be sent to the attacker at output {53}.
attacker(SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).

23. By 22, the attacker may know SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
Using the function 1-proj-SH the attacker may obtain sr_12.
attacker(sr_12).

24. By 23, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).

25. We assume as hypothesis that
attacker(k_4).

26. By 25, the attacker may know k_4.
Using the function pk the attacker may obtain pk(k_4).
attacker(pk(k_4)).

27. By 26, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

28. The attacker has some term sn_2.
attacker(sn_2).

29. By 28, the attacker may know sn_2.
By 25, the attacker may know k_4.
Using the function 2-tuple the attacker may obtain (sn_2,k_4).
attacker((sn_2,k_4)).

30. The message (sn_2,k_4) that the attacker may have by 29 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

31. The attacker has some term e_1.
attacker(e_1).

32. By 12, the attacker may know cr_18.
By 23, the attacker may know sr_12.
By 5, the attacker may know WeakDH.
By 31, the attacker may know e_1.
Using the function 4-tuple the attacker may obtain (cr_18,sr_12,WeakDH,e_1).
attacker((cr_18,sr_12,WeakDH,e_1)).

33. By 32, the attacker may know (cr_18,sr_12,WeakDH,e_1).
Using the function hash_ideal the attacker may obtain hash_ideal((cr_18,sr_12,WeakDH,e_1)).
attacker(hash_ideal((cr_18,sr_12,WeakDH,e_1))).

34. By 25, the attacker may know k_4.
By 33, the attacker may know hash_ideal((cr_18,sr_12,WeakDH,e_1)).
Using the function sign the attacker may obtain sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))).
attacker(sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).

35. By 5, the attacker may know WeakDH.
By 31, the attacker may know e_1.
By 34, the attacker may know sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))).
Using the function SKE the attacker may obtain SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).
attacker(SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).

36. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

37. By 36, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

38. By 37, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

39. By 12, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

40. By 39, the attacker may know CH(cr_18,o_16).
By 24, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)))).

41. By 40, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
By 27, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

42. By 41, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 35, the attacker may know SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))))).

43. By 42, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).
By 38, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).

44. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

45. By 12, the attacker may know cr_18.
By 23, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

46. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

47. By 37, the attacker may know e2b(BadElement).
By 46, the attacker may know master_secret.
By 45, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

48. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know client_finished.
By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).

49. By 48, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).

50. By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
By 49, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).

51. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

52. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 51, the attacker may know server_finished.
By 50, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))).

53. By 52, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))))).

54. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)) that the attacker may have by 24 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 27 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 30 may be read at get {46}.
The message SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))) that the attacker may have by 35 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))) that the attacker may have by 53 may be received at input {26}.
So the entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

55. We assume as hypothesis that
attacker(k_5).

56. The attacker has some term sn_3.
attacker(sn_3).

57. By 56, the attacker may know sn_3.
By 55, the attacker may know k_5.
Using the function 2-tuple the attacker may obtain (sn_3,k_5).
attacker((sn_3,k_5)).

58. The message (sn_3,k_5) that the attacker may have by 57 may be received at input {110}.
So the entry longTermKeys_tbl(sn_3,k_5,pk(k_5)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_3,k_5,pk(k_5))).

59. By 55, the attacker may know k_5.
Using the function pk the attacker may obtain pk(k_5).
attacker(pk(k_5)).

60. By 59, the attacker may know pk(k_5).
By 37, the attacker may know e2b(BadElement).
Using the function rsa_enc the attacker may obtain rsa_enc(pk(k_5),e2b(BadElement)).
attacker(rsa_enc(pk(k_5),e2b(BadElement))).

61. By 60, the attacker may know rsa_enc(pk(k_5),e2b(BadElement)).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_5),e2b(BadElement))).
attacker(CKE(rsa_enc(pk(k_5),e2b(BadElement)))).

62. By 59, the attacker may know pk(k_5).
Using the function CRT the attacker may obtain CRT(pk(k_5)).
attacker(CRT(pk(k_5))).

63. By 13, the attacker may know CH(cr_18,o'_5).
By 22, the attacker may know SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).
attacker((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)))).

64. By 63, the attacker may know (CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).
By 62, the attacker may know CRT(pk(k_5)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))).
attacker(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5)))).

65. By 64, the attacker may know ((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))).
By 61, the attacker may know CKE(rsa_enc(pk(k_5),e2b(BadElement))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))).
attacker((((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).

66. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know client_finished.
By 65, the attacker may know (((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))).

67. By 66, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))))).

68. The message CH(cr_18,o'_5) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) that the attacker may have by 21 may be received at input {49}.
The entry longTermKeys_tbl(sn_3,k_5,pk(k_5)) that may be in a table by 58 may be read at get {103}.
The message CKE(rsa_enc(pk(k_5),e2b(BadElement))) that the attacker may have by 61 may be received at input {86}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))) that the attacker may have by 67 may be received at input {91}.
So the entry serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {99}.
table(serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

69. The entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 54 may be read at get {196}.
The entry serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 68 may be read at get {195}.
We have pk(k_4) ≠ pk(k_5).
So event MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5)) may be executed at {194}.
end(MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).

70. By 69, end(MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).
The goal is reached, represented in the following fact:
end(MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).


Unified offer_2 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
k_4 ≠ k_5 && attacker(o'_5) && attacker(ppp'_3) && attacker(aaa'_3) && attacker(hhh'_3) && attacker(xxx_2) && attacker(k_4) && attacker(k_5) -> end(MatchingResumptionSecret(TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_4),TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_5)))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_14

new cr: random creating cr_18 at {2} in copy a_15

in(io, a_16) at {3} in copy a_15

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_16 at {4} in copy a_15

in(io, CH(~M,a_17)) with ~M = cr_18 at {48} in copy a_18

in(io, SH(a_19,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))) at {49} in copy a_18

new sr_1: random creating sr_12 at {52} in copy a_18

out(io, SH(~M_2,nego(~M_3,RSA(~M_4),~M_5,~M_6,~M_7))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = StrongRSADecryption, ~M_5 = a_20, ~M_6 = a_21, ~M_7 = a_22 at {53} in copy a_18

in(io, SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))) with ~M_2 = sr_12 at {5} in copy a_15

in(io, CRT(pk(a_25))) at {9} in copy a_15

in(io, (a_26,a_27)) at {110} in copy a_14

event WeakOrCompromisedKey(pk(a_27)) at {111} in copy a_14

insert longTermKeys_tbl(a_26,a_27,pk(a_27)) at {112} in copy a_14

get longTermKeys_tbl(a_26,a_27,pk(a_27)) at {103} in copy a_18

event ServerChoosesVersion(cr_18,sr_12,pk(a_27),TLS12) at {55} in copy a_18

event ServerChoosesKEX(cr_18,sr_12,pk(a_27),TLS12,RSA(StrongRSADecryption)) at {56} in copy a_18

event ServerChoosesAE(cr_18,sr_12,pk(a_27),TLS12,a_21) at {57} in copy a_18

event ServerChoosesHash(cr_18,sr_12,pk(a_27),TLS12,a_20) at {58} in copy a_18

out(io, CRT(~M_8)) with ~M_8 = pk(a_27) at {59} in copy a_18

in(io, CKE(rsa_enc(pk(a_27),e2b(BadElement)))) at {86} in copy a_18

out(io, ~M_9) with ~M_9 = zero at {89} in copy a_18

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,(((CH(~M,a_17),SH(~M_2,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,(((CH(~M,a_17),SH(~M_2,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))) at {91} in copy a_18

event ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {97} in copy a_18

out(io, FIN(~M_10)) with ~M_10 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement)))))))) at {98} in copy a_18

insert serverSession(cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {99} in copy a_18

in(io, (a_28,a_25)) at {110} in copy a_13

event WeakOrCompromisedKey(pk(a_25)) at {111} in copy a_13

insert longTermKeys_tbl(a_28,a_25,pk(a_25)) at {112} in copy a_13

get longTermKeys_tbl(a_28,a_25,pk(a_25)) at {46} in copy a_15

in(io, SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))) with sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))) = sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))) at {12} in copy a_15

new x: bitstring creating x_3 at {15} in copy a_15

out(io, CKE(e2b(BadElement))) at {21} in copy a_15

out(io, FIN(~M_11)) with ~M_11 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))) at {24} in copy a_15

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement))))))) at {26} in copy a_15

event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {30} in copy a_15

insert clientSession(cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {31} in copy a_15

get clientSession(cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {196} in copy a_30

get serverSession(cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {195} in copy a_30

event MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(a_25),TLS12,cr_18,sr_12,pk(a_27)) at {194} in copy a_30 (goal)

The event MatchingResumptionSecret(TLS12,cr_18,sr_12,pk(a_25),TLS12,cr_18,sr_12,pk(a_27)) is executed at {194} in copy a_30.
A trace has been found.
RESULT not event(MatchingResumptionSecret(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is false.
-- Query not event(MatchingAEKey(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 131 rules.
400 rules inserted. Base: 375 rules (171 with conclusion selected). Queue: 89 rules.
600 rules inserted. Base: 479 rules (194 with conclusion selected). Queue: 167 rules.
800 rules inserted. Base: 543 rules (205 with conclusion selected). Queue: 198 rules.
1000 rules inserted. Base: 612 rules (220 with conclusion selected). Queue: 213 rules.
1200 rules inserted. Base: 662 rules (240 with conclusion selected). Queue: 219 rules.
1400 rules inserted. Base: 705 rules (259 with conclusion selected). Queue: 241 rules.
1600 rules inserted. Base: 813 rules (301 with conclusion selected). Queue: 216 rules.
1800 rules inserted. Base: 931 rules (369 with conclusion selected). Queue: 211 rules.
2000 rules inserted. Base: 1037 rules (405 with conclusion selected). Queue: 165 rules.
2200 rules inserted. Base: 1115 rules (449 with conclusion selected). Queue: 112 rules.
2400 rules inserted. Base: 1171 rules (496 with conclusion selected). Queue: 32 rules.
2600 rules inserted. Base: 1307 rules (528 with conclusion selected). Queue: 21 rules.
Starting query not event(MatchingAEKey(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3))
goal reachable: k_4 ≠ k_5 && attacker(k_5) && attacker(k_4) && attacker(xxx_2) && attacker(hhh'_3) && attacker(aaa'_3) && attacker(ppp'_3) && attacker(o'_5) -> end(MatchingAEKey(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr_18,!1 = @sid_1]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr_18,!1 = @sid_1]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function StrongHash the attacker may obtain StrongHash.
attacker(StrongHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(o'_5).

10. The attacker has some term offer_2.
attacker(offer_2).

11. The message offer_2 that the attacker may have by 10 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

12. By 11, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

13. By 12, the attacker may know cr_18.
By 9, the attacker may know o'_5.
Using the function CH the attacker may obtain CH(cr_18,o'_5).
attacker(CH(cr_18,o'_5)).

14. We assume as hypothesis that
attacker(ppp'_3).

15. We assume as hypothesis that
attacker(aaa'_3).

16. We assume as hypothesis that
attacker(hhh'_3).

17. Using the function StrongRSADecryption the attacker may obtain StrongRSADecryption.
attacker(StrongRSADecryption).

18. By 17, the attacker may know StrongRSADecryption.
Using the function RSA the attacker may obtain RSA(StrongRSADecryption).
attacker(RSA(StrongRSADecryption)).

19. By 7, the attacker may know TLS12.
By 18, the attacker may know RSA(StrongRSADecryption).
By 16, the attacker may know hhh'_3.
By 15, the attacker may know aaa'_3.
By 14, the attacker may know ppp'_3.
Using the function nego the attacker may obtain nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3).
attacker(nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).

20. We assume as hypothesis that
attacker(xxx_2).

21. By 20, the attacker may know xxx_2.
By 19, the attacker may know nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
attacker(SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).

22. The message CH(cr_18,o'_5) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) that the attacker may have by 21 may be received at input {49}.
So the message SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) may be sent to the attacker at output {53}.
attacker(SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).

23. By 22, the attacker may know SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
Using the function 1-proj-SH the attacker may obtain sr_12.
attacker(sr_12).

24. By 23, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).

25. We assume as hypothesis that
attacker(k_4).

26. By 25, the attacker may know k_4.
Using the function pk the attacker may obtain pk(k_4).
attacker(pk(k_4)).

27. By 26, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

28. The attacker has some term sn_2.
attacker(sn_2).

29. By 28, the attacker may know sn_2.
By 25, the attacker may know k_4.
Using the function 2-tuple the attacker may obtain (sn_2,k_4).
attacker((sn_2,k_4)).

30. The message (sn_2,k_4) that the attacker may have by 29 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

31. The attacker has some term e_1.
attacker(e_1).

32. By 12, the attacker may know cr_18.
By 23, the attacker may know sr_12.
By 5, the attacker may know WeakDH.
By 31, the attacker may know e_1.
Using the function 4-tuple the attacker may obtain (cr_18,sr_12,WeakDH,e_1).
attacker((cr_18,sr_12,WeakDH,e_1)).

33. By 32, the attacker may know (cr_18,sr_12,WeakDH,e_1).
Using the function hash_ideal the attacker may obtain hash_ideal((cr_18,sr_12,WeakDH,e_1)).
attacker(hash_ideal((cr_18,sr_12,WeakDH,e_1))).

34. By 25, the attacker may know k_4.
By 33, the attacker may know hash_ideal((cr_18,sr_12,WeakDH,e_1)).
Using the function sign the attacker may obtain sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))).
attacker(sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).

35. By 5, the attacker may know WeakDH.
By 31, the attacker may know e_1.
By 34, the attacker may know sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))).
Using the function SKE the attacker may obtain SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).
attacker(SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).

36. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

37. By 36, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

38. By 37, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

39. By 12, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

40. By 39, the attacker may know CH(cr_18,o_16).
By 24, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)))).

41. By 40, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
By 27, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

42. By 41, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 35, the attacker may know SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))))).

43. By 42, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))).
By 38, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).

44. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

45. By 12, the attacker may know cr_18.
By 23, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

46. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

47. By 37, the attacker may know e2b(BadElement).
By 46, the attacker may know master_secret.
By 45, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

48. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know client_finished.
By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).

49. By 48, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).

50. By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))).
By 49, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).

51. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

52. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 51, the attacker may know server_finished.
By 50, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))).

53. By 52, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))))).

54. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)) that the attacker may have by 24 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 27 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 30 may be read at get {46}.
The message SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1)))) that the attacker may have by 35 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))))))) that the attacker may have by 53 may be received at input {26}.
So the entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

55. We assume as hypothesis that
attacker(k_5).

56. The attacker has some term sn_3.
attacker(sn_3).

57. By 56, the attacker may know sn_3.
By 55, the attacker may know k_5.
Using the function 2-tuple the attacker may obtain (sn_3,k_5).
attacker((sn_3,k_5)).

58. The message (sn_3,k_5) that the attacker may have by 57 may be received at input {110}.
So the entry longTermKeys_tbl(sn_3,k_5,pk(k_5)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_3,k_5,pk(k_5))).

59. By 55, the attacker may know k_5.
Using the function pk the attacker may obtain pk(k_5).
attacker(pk(k_5)).

60. By 59, the attacker may know pk(k_5).
By 37, the attacker may know e2b(BadElement).
Using the function rsa_enc the attacker may obtain rsa_enc(pk(k_5),e2b(BadElement)).
attacker(rsa_enc(pk(k_5),e2b(BadElement))).

61. By 60, the attacker may know rsa_enc(pk(k_5),e2b(BadElement)).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_5),e2b(BadElement))).
attacker(CKE(rsa_enc(pk(k_5),e2b(BadElement)))).

62. By 59, the attacker may know pk(k_5).
Using the function CRT the attacker may obtain CRT(pk(k_5)).
attacker(CRT(pk(k_5))).

63. By 13, the attacker may know CH(cr_18,o'_5).
By 22, the attacker may know SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).
attacker((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)))).

64. By 63, the attacker may know (CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))).
By 62, the attacker may know CRT(pk(k_5)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))).
attacker(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5)))).

65. By 64, the attacker may know ((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))).
By 61, the attacker may know CKE(rsa_enc(pk(k_5),e2b(BadElement))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))).
attacker((((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).

66. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know client_finished.
By 65, the attacker may know (((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))).

67. By 66, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))))).

68. The message CH(cr_18,o'_5) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3)) that the attacker may have by 21 may be received at input {49}.
The entry longTermKeys_tbl(sn_3,k_5,pk(k_5)) that may be in a table by 58 may be read at get {103}.
The message CKE(rsa_enc(pk(k_5),e2b(BadElement))) that the attacker may have by 61 may be received at input {86}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement)))))) that the attacker may have by 67 may be received at input {91}.
So the entry serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {99}.
table(serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

69. The entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 54 may be read at get {202}.
The entry serverSession(cr_18,sr_12,NoPSK,pk(k_5),o'_5,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o'_5),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3))),CRT(pk(k_5))),CKE(rsa_enc(pk(k_5),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 68 may be read at get {201}.
We have pk(k_4) ≠ pk(k_5).
So event MatchingAEKey(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5)) may be executed at {200}.
end(MatchingAEKey(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).

70. By 69, end(MatchingAEKey(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).
The goal is reached, represented in the following fact:
end(MatchingAEKey(TLS12,cr_18,sr_12,pk(k_4),TLS12,cr_18,sr_12,pk(k_5))).


Unified offer_2 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
k_4 ≠ k_5 && attacker(o'_5) && attacker(ppp'_3) && attacker(aaa'_3) && attacker(hhh'_3) && attacker(xxx_2) && attacker(k_4) && attacker(k_5) -> end(MatchingAEKey(TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_4),TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh'_3,aaa'_3,ppp'_3),xxx_1 = xxx_2,offer_1 = o'_5,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_5)))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_14

new cr: random creating cr_18 at {2} in copy a_15

in(io, a_16) at {3} in copy a_15

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_16 at {4} in copy a_15

in(io, CH(~M,a_17)) with ~M = cr_18 at {48} in copy a_18

in(io, SH(a_19,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))) at {49} in copy a_18

new sr_1: random creating sr_12 at {52} in copy a_18

out(io, SH(~M_2,nego(~M_3,RSA(~M_4),~M_5,~M_6,~M_7))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = StrongRSADecryption, ~M_5 = a_20, ~M_6 = a_21, ~M_7 = a_22 at {53} in copy a_18

in(io, SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))) with ~M_2 = sr_12 at {5} in copy a_15

in(io, CRT(pk(a_25))) at {9} in copy a_15

in(io, (a_26,a_27)) at {110} in copy a_14

event WeakOrCompromisedKey(pk(a_27)) at {111} in copy a_14

insert longTermKeys_tbl(a_26,a_27,pk(a_27)) at {112} in copy a_14

get longTermKeys_tbl(a_26,a_27,pk(a_27)) at {103} in copy a_18

event ServerChoosesVersion(cr_18,sr_12,pk(a_27),TLS12) at {55} in copy a_18

event ServerChoosesKEX(cr_18,sr_12,pk(a_27),TLS12,RSA(StrongRSADecryption)) at {56} in copy a_18

event ServerChoosesAE(cr_18,sr_12,pk(a_27),TLS12,a_21) at {57} in copy a_18

event ServerChoosesHash(cr_18,sr_12,pk(a_27),TLS12,a_20) at {58} in copy a_18

out(io, CRT(~M_8)) with ~M_8 = pk(a_27) at {59} in copy a_18

in(io, CKE(rsa_enc(pk(a_27),e2b(BadElement)))) at {86} in copy a_18

out(io, ~M_9) with ~M_9 = zero at {89} in copy a_18

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,(((CH(~M,a_17),SH(~M_2,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,(((CH(~M,a_17),SH(~M_2,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))) at {91} in copy a_18

event ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {97} in copy a_18

out(io, FIN(~M_10)) with ~M_10 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement)))))))) at {98} in copy a_18

insert serverSession(cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {99} in copy a_18

in(io, (a_28,a_25)) at {110} in copy a_13

event WeakOrCompromisedKey(pk(a_25)) at {111} in copy a_13

insert longTermKeys_tbl(a_28,a_25,pk(a_25)) at {112} in copy a_13

get longTermKeys_tbl(a_28,a_25,pk(a_25)) at {46} in copy a_15

in(io, SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))) with sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))) = sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))) at {12} in copy a_15

new x: bitstring creating x_3 at {15} in copy a_15

out(io, CKE(e2b(BadElement))) at {21} in copy a_15

out(io, FIN(~M_11)) with ~M_11 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))) at {24} in copy a_15

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_16),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((~M,~M_2,WeakDH,a_29))))),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement))))))) at {26} in copy a_15

event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {30} in copy a_15

insert clientSession(cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {31} in copy a_15

get clientSession(cr_18,sr_12,NoPSK,pk(a_25),a_16,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_23,a_24))),CRT(pk(a_25))),SKE(WeakDH,a_29,sign(a_25,hash_ideal((cr_18,sr_12,WeakDH,a_29))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {202} in copy a_30

get serverSession(cr_18,sr_12,NoPSK,pk(a_27),a_17,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,a_17),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),a_20,a_21,a_22))),CRT(pk(a_27))),CKE(rsa_enc(pk(a_27),e2b(BadElement))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {201} in copy a_30

event MatchingAEKey(TLS12,cr_18,sr_12,pk(a_25),TLS12,cr_18,sr_12,pk(a_27)) at {200} in copy a_30 (goal)

The event MatchingAEKey(TLS12,cr_18,sr_12,pk(a_25),TLS12,cr_18,sr_12,pk(a_27)) is executed at {200} in copy a_30.
A trace has been found.
RESULT not event(MatchingAEKey(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is false.
-- Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 130 rules.
400 rules inserted. Base: 376 rules (172 with conclusion selected). Queue: 101 rules.
600 rules inserted. Base: 485 rules (192 with conclusion selected). Queue: 228 rules.
800 rules inserted. Base: 567 rules (199 with conclusion selected). Queue: 242 rules.
1000 rules inserted. Base: 631 rules (214 with conclusion selected). Queue: 252 rules.
1200 rules inserted. Base: 718 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 767 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 847 rules (296 with conclusion selected). Queue: 328 rules.
1800 rules inserted. Base: 892 rules (318 with conclusion selected). Queue: 311 rules.
2000 rules inserted. Base: 1001 rules (377 with conclusion selected). Queue: 290 rules.
2200 rules inserted. Base: 1115 rules (443 with conclusion selected). Queue: 236 rules.
2400 rules inserted. Base: 1229 rules (499 with conclusion selected). Queue: 205 rules.
2600 rules inserted. Base: 1302 rules (532 with conclusion selected). Queue: 158 rules.
2800 rules inserted. Base: 1358 rules (594 with conclusion selected). Queue: 98 rules.
3000 rules inserted. Base: 1491 rules (637 with conclusion selected). Queue: 54 rules.
3200 rules inserted. Base: 1609 rules (667 with conclusion selected). Queue: 28 rules.
Starting query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption)))
goal reachable: begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> end(ClientAEKeyLeaked(TLS12,cr_19,sr_13,NoPSK,pk(k_4)))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function WeakHash the attacker may obtain WeakHash.
attacker(WeakHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know WeakHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(sr_13).

10. By 9, the attacker may know sr_13.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
attacker(SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).

11. We assume as hypothesis that
attacker(sn_2).

12. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

13. By 12, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

14. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

15. We assume as hypothesis that
attacker(offer_2).

16. We assume as hypothesis that
attacker(cr_19).

17. By 16, the attacker may know cr_19.
By 15, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_19,offer_2).
attacker(CH(cr_19,offer_2)).

18. We assume as hypothesis that
attacker(pt_9).

19. We assume as hypothesis that
attacker(a_13).

20. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know WeakHash.
By 19, the attacker may know a_13.
By 18, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9).
attacker(nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9)).

21. We assume as hypothesis that
attacker(xxx_2).

22. By 21, the attacker may know xxx_2.
By 20, the attacker may know nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9)).
attacker(SH(xxx_2,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))).

23. The message CH(cr_19,offer_2) that the attacker may have by 17 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9)) that the attacker may have by 22 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {103}.
The event ServerChoosesKEX(cr_19,sr_12,pk(k_4),TLS12,DHE(WeakDH)) may be executed at {56}.
So the message SKE(WeakDH,BadElement,sign(k_4,collision)) may be sent to the attacker at output {67}.
attacker(SKE(WeakDH,BadElement,sign(k_4,collision))).

24. By 23, the attacker may know SKE(WeakDH,BadElement,sign(k_4,collision)).
Using the function 3-proj-SKE the attacker may obtain sign(k_4,collision).
attacker(sign(k_4,collision)).

25. The attacker has some term e_1.
attacker(e_1).

26. By 5, the attacker may know WeakDH.
By 25, the attacker may know e_1.
By 24, the attacker may know sign(k_4,collision).
Using the function SKE the attacker may obtain SKE(WeakDH,e_1,sign(k_4,collision)).
attacker(SKE(WeakDH,e_1,sign(k_4,collision))).

27. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

28. By 27, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

29. By 28, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

30. The attacker has some term offer_3.
attacker(offer_3).

31. The message offer_3 that the attacker may have by 30 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

32. By 31, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

33. By 32, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

34. By 33, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)))).

35. By 34, the attacker may know (CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
By 13, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

36. By 35, the attacker may know ((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 26, the attacker may know SKE(WeakDH,e_1,sign(k_4,collision)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
attacker((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision)))).

37. By 36, the attacker may know (((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
By 29, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).

38. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

39. By 32, the attacker may know cr_18.
By 9, the attacker may know sr_13.
Using the function 2-tuple the attacker may obtain (cr_18,sr_13).
attacker((cr_18,sr_13)).

40. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

41. By 28, the attacker may know e2b(BadElement).
By 40, the attacker may know master_secret.
By 39, the attacker may know (cr_18,sr_13).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))).

42. By 41, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 38, the attacker may know client_finished.
By 37, the attacker may know ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).

43. By 42, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).

44. By 37, the attacker may know ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
By 43, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).

45. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

46. By 41, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 45, the attacker may know server_finished.
By 44, the attacker may know (((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).

47. By 46, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))))).

48. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
The message SKE(WeakDH,e_1,sign(k_4,collision)) that the attacker may have by 26 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))) that the attacker may have by 47 may be received at input {26}.
So the entry clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)))).

49. By 9, the attacker may know sr_13.
By 32, the attacker may know cr_18.
Using the function 2-tuple the attacker may obtain (sr_13,cr_18).
attacker((sr_13,cr_18)).

50. Using the function client_key_expansion the attacker may obtain client_key_expansion.
attacker(client_key_expansion).

51. By 41, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 50, the attacker may know client_key_expansion.
By 49, the attacker may know (sr_13,cr_18).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))).

52. By 51, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)).
Using the function b2ae the attacker may obtain b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))).
attacker(b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)))).

53. The entry clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))) that may be in a table by 48 may be read at get {165}.
The message b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))) that the attacker may have by 52 may be received at input {163}.
So event ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4)) may be executed at {164}.
end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).

54. By 53, end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).
The goal is reached, represented in the following fact:
end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(sr_13) && attacker(sn_2) && attacker(offer_2) && attacker(cr_19) && attacker(pt_9) && attacker(a_13) && attacker(xxx_2) && begin(ServerChoosesKEX(cr_19,sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = sn_2,!1 = @sid_1]),TLS12,DHE(WeakDH))) -> end(ClientAEKeyLeaked(TLS12,cr[!1 = @sid],sr_13,NoPSK,pk(k_2[a_2 = sn_2,!1 = @sid_1])))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))) at {5} in copy a_13

in(io, CH(a_18,a_19)) at {48} in copy a_20

in(io, SH(a_21,nego(TLS12,DHE(WeakDH),WeakHash,a_22,a_23))) at {49} in copy a_20

new sr_1: random creating sr_12 at {52} in copy a_20

out(io, SH(~M_2,nego(~M_3,DHE(WeakDH),WeakHash,~M_4,~M_5))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = a_22, ~M_5 = a_23 at {53} in copy a_20

in(io, a_24) at {106} in copy a_25

new k_2: privkey creating k_4 at {107} in copy a_25

insert longTermKeys_tbl(a_24,k_4,pk(k_4)) at {108} in copy a_25

out(io, ~M_6) with ~M_6 = pk(k_4) at {109} in copy a_25

in(io, CRT(~M_6)) with ~M_6 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_24,k_4,pk(k_4)) at {46} in copy a_13

get longTermKeys_tbl(a_24,k_4,pk(k_4)) at {103} in copy a_20

event ServerChoosesVersion(a_18,sr_12,pk(k_4),TLS12) at {55} in copy a_20

event ServerChoosesKEX(a_18,sr_12,pk(k_4),TLS12,DHE(WeakDH)) at {56} in copy a_20

event ServerChoosesAE(a_18,sr_12,pk(k_4),TLS12,a_22) at {57} in copy a_20

event ServerChoosesHash(a_18,sr_12,pk(k_4),TLS12,WeakHash) at {58} in copy a_20

out(io, CRT(~M_7)) with ~M_7 = pk(k_4) at {59} in copy a_20

new x_2: bitstring creating x_3 at {62} in copy a_20

out(io, SKE(WeakDH,BadElement,~M_8)) with ~M_8 = sign(k_4,collision) at {67} in copy a_20

in(io, SKE(WeakDH,a_26,~M_8)) with ~M_8 = sign(k_4,collision) at {12} in copy a_13

new x: bitstring creating x_4 at {15} in copy a_13

out(io, CKE(e2b(BadElement))) at {21} in copy a_13

out(io, FIN(~M_9)) with ~M_9 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement)))) at {24} in copy a_13

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(WeakDH,a_26,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(WeakDH,a_26,~M_8)),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(WeakDH,a_26,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(WeakDH,a_26,~M_8)),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_finished,(((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement))))))) at {26} in copy a_13

event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {30} in copy a_13

insert clientSession(cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {31} in copy a_13

get clientSession(cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_26,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {165} in copy a_27

in(io, b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_key_expansion,(a_15,~M)))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_key_expansion,(a_15,~M)) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18)) at {163} in copy a_27

event ClientAEKeyLeaked(TLS12,cr_18,a_15,NoPSK,pk(k_4)) at {164} in copy a_27 (goal)

The event ClientAEKeyLeaked(TLS12,cr_18,a_15,NoPSK,pk(k_4)) is executed at {164} in copy a_27.
A trace has been found.
RESULT event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) is false.
-- Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 130 rules.
400 rules inserted. Base: 376 rules (172 with conclusion selected). Queue: 101 rules.
600 rules inserted. Base: 485 rules (192 with conclusion selected). Queue: 228 rules.
800 rules inserted. Base: 567 rules (199 with conclusion selected). Queue: 242 rules.
1000 rules inserted. Base: 631 rules (214 with conclusion selected). Queue: 252 rules.
1200 rules inserted. Base: 718 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 767 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 847 rules (296 with conclusion selected). Queue: 328 rules.
1800 rules inserted. Base: 892 rules (318 with conclusion selected). Queue: 311 rules.
2000 rules inserted. Base: 1001 rules (377 with conclusion selected). Queue: 290 rules.
2200 rules inserted. Base: 1115 rules (443 with conclusion selected). Queue: 236 rules.
2400 rules inserted. Base: 1229 rules (499 with conclusion selected). Queue: 205 rules.
2600 rules inserted. Base: 1302 rules (532 with conclusion selected). Queue: 158 rules.
2800 rules inserted. Base: 1358 rules (594 with conclusion selected). Queue: 98 rules.
3000 rules inserted. Base: 1491 rules (637 with conclusion selected). Queue: 54 rules.
3200 rules inserted. Base: 1609 rules (667 with conclusion selected). Queue: 28 rules.
Starting query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) -> end(ClientAEKeyLeaked(TLS12,cr_19,sr_13,NoPSK,pk(k_4)))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_13,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function WeakHash the attacker may obtain WeakHash.
attacker(WeakHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know WeakHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(sr_13).

10. By 9, the attacker may know sr_13.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
attacker(SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).

11. We assume as hypothesis that
attacker(a_13).

12. The message a_13 that the attacker may have by 11 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

13. By 12, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

14. The message a_13 that the attacker may have by 11 may be received at input {106}.
So the entry longTermKeys_tbl(a_13,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(a_13,k_4,pk(k_4))).

15. We assume as hypothesis that
attacker(offer_2).

16. We assume as hypothesis that
attacker(cr_19).

17. By 16, the attacker may know cr_19.
By 15, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_19,offer_2).
attacker(CH(cr_19,offer_2)).

18. We assume as hypothesis that
attacker(pt_9).

19. We assume as hypothesis that
attacker(a_14).

20. We assume as hypothesis that
attacker(h_2).

21. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

22. By 21, the attacker may know WeakRSADecryption.
Using the function RSA the attacker may obtain RSA(WeakRSADecryption).
attacker(RSA(WeakRSADecryption)).

23. By 7, the attacker may know TLS12.
By 22, the attacker may know RSA(WeakRSADecryption).
By 20, the attacker may know h_2.
By 19, the attacker may know a_14.
By 18, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9).
attacker(nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9)).

24. We assume as hypothesis that
attacker(xxx_2).

25. By 24, the attacker may know xxx_2.
By 23, the attacker may know nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9)).
attacker(SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9))).

26. Using the function collision the attacker may obtain collision.
attacker(collision).

27. By 12, the attacker may know pk(k_4).
By 26, the attacker may know collision.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(k_4),collision).
attacker(rsa_enc(pk(k_4),collision)).

28. By 27, the attacker may know rsa_enc(pk(k_4),collision).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_4),collision)).
attacker(CKE(rsa_enc(pk(k_4),collision))).

29. The message CH(cr_19,offer_2) that the attacker may have by 17 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9)) that the attacker may have by 25 may be received at input {49}.
The entry longTermKeys_tbl(a_13,k_4,pk(k_4)) that may be in a table by 14 may be read at get {103}.
The event ServerChoosesKEX(cr_19,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption)) may be executed at {56}.
The event ServerChoosesHash(cr_19,sr_12,pk(k_4),TLS12,h_2) may be executed at {58}.
The message CKE(rsa_enc(pk(k_4),collision)) that the attacker may have by 28 may be received at input {86}.
So the message (collision,sign(k_4,collision)) may be sent to the attacker at output {89}.
attacker((collision,sign(k_4,collision))).

30. By 29, the attacker may know (collision,sign(k_4,collision)).
Using the function 2-proj-2-tuple the attacker may obtain sign(k_4,collision).
attacker(sign(k_4,collision)).

31. The attacker has some term e_1.
attacker(e_1).

32. By 5, the attacker may know WeakDH.
By 31, the attacker may know e_1.
By 30, the attacker may know sign(k_4,collision).
Using the function SKE the attacker may obtain SKE(WeakDH,e_1,sign(k_4,collision)).
attacker(SKE(WeakDH,e_1,sign(k_4,collision))).

33. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

34. By 33, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

35. By 34, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

36. The attacker has some term offer_3.
attacker(offer_3).

37. The message offer_3 that the attacker may have by 36 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

38. By 37, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

39. By 38, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

40. By 39, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)))).

41. By 40, the attacker may know (CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
By 13, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

42. By 41, the attacker may know ((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 32, the attacker may know SKE(WeakDH,e_1,sign(k_4,collision)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
attacker((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision)))).

43. By 42, the attacker may know (((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
By 35, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).

44. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

45. By 38, the attacker may know cr_18.
By 9, the attacker may know sr_13.
Using the function 2-tuple the attacker may obtain (cr_18,sr_13).
attacker((cr_18,sr_13)).

46. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

47. By 34, the attacker may know e2b(BadElement).
By 46, the attacker may know master_secret.
By 45, the attacker may know (cr_18,sr_13).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))).

48. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 44, the attacker may know client_finished.
By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).

49. By 48, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).

50. By 43, the attacker may know ((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
By 49, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).

51. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

52. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 51, the attacker may know server_finished.
By 50, the attacker may know (((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).

53. By 52, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))))).

54. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(a_13,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
The message SKE(WeakDH,e_1,sign(k_4,collision)) that the attacker may have by 32 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_finished,(((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))) that the attacker may have by 53 may be received at input {26}.
So the entry clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)))).

55. By 9, the attacker may know sr_13.
By 38, the attacker may know cr_18.
Using the function 2-tuple the attacker may obtain (sr_13,cr_18).
attacker((sr_13,cr_18)).

56. Using the function client_key_expansion the attacker may obtain client_key_expansion.
attacker(client_key_expansion).

57. By 47, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)).
By 56, the attacker may know client_key_expansion.
By 55, the attacker may know (sr_13,cr_18).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))).

58. By 57, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)).
Using the function b2ae the attacker may obtain b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))).
attacker(b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18)))).

59. The entry clientSession(cr_18,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),server_key_expansion,(sr_13,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_finished,((((CH(cr_18,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13))) that may be in a table by 54 may be read at get {165}.
The message b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_13)),client_key_expansion,(sr_13,cr_18))) that the attacker may have by 58 may be received at input {163}.
So event ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4)) may be executed at {164}.
end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).

60. By 59, end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).
The goal is reached, represented in the following fact:
end(ClientAEKeyLeaked(TLS12,cr_18,sr_13,NoPSK,pk(k_4))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(sr_13) && attacker(a_13) && attacker(offer_2) && attacker(cr_19) && attacker(pt_9) && attacker(a_14) && attacker(h_2) && attacker(xxx_2) && begin(ServerChoosesKEX(cr_19,sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = a_13,!1 = @sid_1]),TLS12,RSA(WeakRSADecryption))) && begin(ServerChoosesHash(cr_19,sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = a_13,!1 = @sid_1]),TLS12,h_2)) -> end(ClientAEKeyLeaked(TLS12,cr[!1 = @sid],sr_13,NoPSK,pk(k_2[a_2 = a_13,!1 = @sid_1])))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))) at {5} in copy a_13

in(io, CH(a_18,a_19)) at {48} in copy a_20

in(io, SH(a_21,nego(TLS12,RSA(WeakRSADecryption),a_22,a_23,a_24))) at {49} in copy a_20

new sr_1: random creating sr_12 at {52} in copy a_20

out(io, SH(~M_2,nego(~M_3,RSA(~M_4),~M_5,~M_6,~M_7))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = WeakRSADecryption, ~M_5 = a_22, ~M_6 = a_23, ~M_7 = a_24 at {53} in copy a_20

in(io, a_25) at {106} in copy a_26

new k_2: privkey creating k_4 at {107} in copy a_26

insert longTermKeys_tbl(a_25,k_4,pk(k_4)) at {108} in copy a_26

out(io, ~M_8) with ~M_8 = pk(k_4) at {109} in copy a_26

in(io, CRT(~M_8)) with ~M_8 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_25,k_4,pk(k_4)) at {46} in copy a_13

get longTermKeys_tbl(a_25,k_4,pk(k_4)) at {103} in copy a_20

event ServerChoosesVersion(a_18,sr_12,pk(k_4),TLS12) at {55} in copy a_20

event ServerChoosesKEX(a_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption)) at {56} in copy a_20

event ServerChoosesAE(a_18,sr_12,pk(k_4),TLS12,a_23) at {57} in copy a_20

event ServerChoosesHash(a_18,sr_12,pk(k_4),TLS12,a_22) at {58} in copy a_20

out(io, CRT(~M_9)) with ~M_9 = pk(k_4) at {59} in copy a_20

in(io, CKE(rsa_enc(~M_8,collision))) with rsa_enc(~M_8,collision) = rsa_enc(pk(k_4),collision) at {86} in copy a_20

out(io, (collision,~M_10)) with ~M_10 = sign(k_4,collision) at {89} in copy a_20

in(io, SKE(WeakDH,a_27,~M_10)) with ~M_10 = sign(k_4,collision) at {12} in copy a_13

new x: bitstring creating x_3 at {15} in copy a_13

out(io, CKE(e2b(BadElement))) at {21} in copy a_13

out(io, FIN(~M_11)) with ~M_11 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement)))) at {24} in copy a_13

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_8)),SKE(WeakDH,a_27,~M_10)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_8)),SKE(WeakDH,a_27,~M_10)),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_8)),SKE(WeakDH,a_27,~M_10)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(~M_8)),SKE(WeakDH,a_27,~M_10)),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_finished,(((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement))))))) at {26} in copy a_13

event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {30} in copy a_13

insert clientSession(cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {31} in copy a_13

get clientSession(cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(WeakDH,a_27,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {165} in copy a_28

in(io, b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_key_expansion,(a_15,~M)))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_key_expansion,(a_15,~M)) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18)) at {163} in copy a_28

event ClientAEKeyLeaked(TLS12,cr_18,a_15,NoPSK,pk(k_4)) at {164} in copy a_28 (goal)

The event ClientAEKeyLeaked(TLS12,cr_18,a_15,NoPSK,pk(k_4)) is executed at {164} in copy a_28.
A trace has been found.
RESULT event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 130 rules.
400 rules inserted. Base: 376 rules (172 with conclusion selected). Queue: 101 rules.
600 rules inserted. Base: 485 rules (192 with conclusion selected). Queue: 228 rules.
800 rules inserted. Base: 567 rules (199 with conclusion selected). Queue: 242 rules.
1000 rules inserted. Base: 631 rules (214 with conclusion selected). Queue: 252 rules.
1200 rules inserted. Base: 718 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 767 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 847 rules (296 with conclusion selected). Queue: 328 rules.
1800 rules inserted. Base: 892 rules (318 with conclusion selected). Queue: 311 rules.
2000 rules inserted. Base: 1001 rules (377 with conclusion selected). Queue: 290 rules.
2200 rules inserted. Base: 1115 rules (443 with conclusion selected). Queue: 236 rules.
2400 rules inserted. Base: 1229 rules (499 with conclusion selected). Queue: 205 rules.
2600 rules inserted. Base: 1302 rules (532 with conclusion selected). Queue: 158 rules.
2800 rules inserted. Base: 1358 rules (594 with conclusion selected). Queue: 98 rules.
3000 rules inserted. Base: 1491 rules (637 with conclusion selected). Queue: 54 rules.
3200 rules inserted. Base: 1609 rules (667 with conclusion selected). Queue: 28 rules.
Starting query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) -> end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function StrongHash the attacker may obtain StrongHash.
attacker(StrongHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(offer_2).

10. The attacker has some term offer_3.
attacker(offer_3).

11. The message offer_3 that the attacker may have by 10 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

12. By 11, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

13. By 12, the attacker may know cr_18.
By 9, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_18,offer_2).
attacker(CH(cr_18,offer_2)).

14. We assume as hypothesis that
attacker(pt_9).

15. We assume as hypothesis that
attacker(a_13).

16. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 15, the attacker may know a_13.
By 14, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).

17. We assume as hypothesis that
attacker(xxx_2).

18. By 17, the attacker may know xxx_2.
By 16, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).
attacker(SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))).

19. The message CH(cr_18,offer_2) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) that the attacker may have by 18 may be received at input {49}.
So the message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) may be sent to the attacker at output {53}.
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))).

20. By 19, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).
Using the function 1-proj-SH the attacker may obtain sr_12.
attacker(sr_12).

21. By 20, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).

22. We assume as hypothesis that
attacker(sn_2).

23. The message sn_2 that the attacker may have by 22 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

24. By 23, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

25. The message sn_2 that the attacker may have by 22 may be received at input {106}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

26. The message CH(cr_18,offer_2) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) that the attacker may have by 18 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 25 may be read at get {103}.
The event ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH)) may be executed at {56}.
The event ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash) may be executed at {58}.
So the message SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))) may be sent to the attacker at output {67}.
attacker(SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).

27. By 26, the attacker may know SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
Using the function 3-proj-SKE the attacker may obtain sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))).
attacker(sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).

28. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

29. By 5, the attacker may know WeakDH.
By 28, the attacker may know BadElement.
By 27, the attacker may know sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))).
Using the function SKE the attacker may obtain SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
attacker(SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).

30. By 28, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

31. By 30, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

32. By 12, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

33. By 32, the attacker may know CH(cr_18,o_16).
By 21, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)))).

34. By 33, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))).
By 24, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

35. By 34, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 29, the attacker may know SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))))).

36. By 35, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).
By 31, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).

37. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

38. By 12, the attacker may know cr_18.
By 20, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

39. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

40. By 30, the attacker may know e2b(BadElement).
By 39, the attacker may know master_secret.
By 38, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

41. By 40, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 37, the attacker may know client_finished.
By 36, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).

42. By 41, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).

43. By 36, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
By 42, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).

44. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

45. By 40, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know server_finished.
By 43, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))).

46. By 45, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))))).

47. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5)) that the attacker may have by 21 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 24 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 25 may be read at get {46}.
The message SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))) that the attacker may have by 29 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))) that the attacker may have by 46 may be received at input {26}.
So the entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

48. By 20, the attacker may know sr_12.
By 12, the attacker may know cr_18.
Using the function 2-tuple the attacker may obtain (sr_12,cr_18).
attacker((sr_12,cr_18)).

49. Using the function client_key_expansion the attacker may obtain client_key_expansion.
attacker(client_key_expansion).

50. By 40, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 49, the attacker may know client_key_expansion.
By 48, the attacker may know (sr_12,cr_18).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))).

51. By 50, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)).
Using the function b2ae the attacker may obtain b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))).
attacker(b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)))).

52. The entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 47 may be read at get {165}.
The message b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))) that the attacker may have by 51 may be received at input {163}.
So event ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)) may be executed at {164}.
end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).

53. By 52, end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).
The goal is reached, represented in the following fact:
end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(offer_2) && attacker(pt_9) && attacker(a_13) && attacker(xxx_2) && attacker(sn_2) && begin(ServerChoosesKEX(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_2[a_2 = sn_2,!1 = @sid_2]),TLS12,DHE(WeakDH))) && begin(ServerChoosesHash(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_2[a_2 = sn_2,!1 = @sid_2]),TLS12,StrongHash)) -> end(ClientAEKeyLeaked(TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],NoPSK,pk(k_2[a_2 = sn_2,!1 = @sid_2])))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, CH(~M,a_15)) with ~M = cr_18 at {48} in copy a_16

in(io, SH(a_17,nego(TLS12,DHE(WeakDH),StrongHash,a_18,a_19))) at {49} in copy a_16

new sr_1: random creating sr_12 at {52} in copy a_16

out(io, SH(~M_2,nego(~M_3,DHE(WeakDH),StrongHash,~M_4,~M_5))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = a_18, ~M_5 = a_19 at {53} in copy a_16

in(io, SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))) with ~M_2 = sr_12 at {5} in copy a_13

in(io, a_22) at {106} in copy a_23

new k_2: privkey creating k_4 at {107} in copy a_23

insert longTermKeys_tbl(a_22,k_4,pk(k_4)) at {108} in copy a_23

out(io, ~M_6) with ~M_6 = pk(k_4) at {109} in copy a_23

in(io, CRT(~M_6)) with ~M_6 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_22,k_4,pk(k_4)) at {46} in copy a_13

get longTermKeys_tbl(a_22,k_4,pk(k_4)) at {103} in copy a_16

event ServerChoosesVersion(cr_18,sr_12,pk(k_4),TLS12) at {55} in copy a_16

event ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH)) at {56} in copy a_16

event ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_18) at {57} in copy a_16

event ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash) at {58} in copy a_16

out(io, CRT(~M_7)) with ~M_7 = pk(k_4) at {59} in copy a_16

new x_2: bitstring creating x_3 at {62} in copy a_16

out(io, SKE(WeakDH,BadElement,~M_8)) with ~M_8 = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))) at {67} in copy a_16

in(io, SKE(WeakDH,BadElement,~M_8)) with ~M_8 = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))) at {12} in copy a_13

new x: bitstring creating x_4 at {15} in copy a_13

out(io, CKE(e2b(BadElement))) at {21} in copy a_13

out(io, FIN(~M_9)) with ~M_9 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))) at {24} in copy a_13

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))) at {26} in copy a_13

event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {30} in copy a_13

insert clientSession(cr_18,sr_12,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {31} in copy a_13

get clientSession(cr_18,sr_12,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {165} in copy a_24

in(io, b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_key_expansion,(~M_2,~M)))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_key_expansion,(~M_2,~M)) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)) at {163} in copy a_24

event ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)) at {164} in copy a_24 (goal)

The event ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)) is executed at {164} in copy a_24.
A trace has been found.
RESULT event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 130 rules.
400 rules inserted. Base: 375 rules (172 with conclusion selected). Queue: 96 rules.
600 rules inserted. Base: 479 rules (192 with conclusion selected). Queue: 213 rules.
800 rules inserted. Base: 562 rules (204 with conclusion selected). Queue: 248 rules.
1000 rules inserted. Base: 621 rules (214 with conclusion selected). Queue: 254 rules.
1200 rules inserted. Base: 691 rules (248 with conclusion selected). Queue: 298 rules.
1400 rules inserted. Base: 763 rules (270 with conclusion selected). Queue: 290 rules.
1600 rules inserted. Base: 828 rules (305 with conclusion selected). Queue: 323 rules.
1800 rules inserted. Base: 904 rules (348 with conclusion selected). Queue: 291 rules.
2000 rules inserted. Base: 1011 rules (410 with conclusion selected). Queue: 253 rules.
2200 rules inserted. Base: 1121 rules (472 with conclusion selected). Queue: 235 rules.
2400 rules inserted. Base: 1217 rules (509 with conclusion selected). Queue: 180 rules.
2600 rules inserted. Base: 1281 rules (548 with conclusion selected). Queue: 118 rules.
2800 rules inserted. Base: 1366 rules (621 with conclusion selected). Queue: 58 rules.
3000 rules inserted. Base: 1490 rules (646 with conclusion selected). Queue: 54 rules.
3200 rules inserted. Base: 1626 rules (674 with conclusion selected). Queue: 21 rules.
Starting query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: attacker(k_4) && attacker(sr_12) -> end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)))
Abbreviations:
cr_18 = cr[!1 = @sid]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]

1. The attacker has some term o_16.
attacker(o_16).

2. The attacker has some term ppp_5.
attacker(ppp_5).

3. The attacker has some term aaa_5.
attacker(aaa_5).

4. Using the function WeakHash the attacker may obtain WeakHash.
attacker(WeakHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know WeakHash.
By 3, the attacker may know aaa_5.
By 2, the attacker may know ppp_5.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
attacker(nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).

11. We assume as hypothesis that
attacker(k_4).

12. By 11, the attacker may know k_4.
Using the function pk the attacker may obtain pk(k_4).
attacker(pk(k_4)).

13. By 12, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

14. The attacker has some term sn_2.
attacker(sn_2).

15. By 14, the attacker may know sn_2.
By 11, the attacker may know k_4.
Using the function 2-tuple the attacker may obtain (sn_2,k_4).
attacker((sn_2,k_4)).

16. The message (sn_2,k_4) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

17. Using the function collision the attacker may obtain collision.
attacker(collision).

18. By 11, the attacker may know k_4.
By 17, the attacker may know collision.
Using the function sign the attacker may obtain sign(k_4,collision).
attacker(sign(k_4,collision)).

19. The attacker has some term e_1.
attacker(e_1).

20. By 5, the attacker may know WeakDH.
By 19, the attacker may know e_1.
By 18, the attacker may know sign(k_4,collision).
Using the function SKE the attacker may obtain SKE(WeakDH,e_1,sign(k_4,collision)).
attacker(SKE(WeakDH,e_1,sign(k_4,collision))).

21. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

22. By 21, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

23. By 22, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

24. The attacker has some term offer_2.
attacker(offer_2).

25. The message offer_2 that the attacker may have by 24 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

26. By 25, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

27. By 26, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

28. By 27, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)))).

29. By 28, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))).
By 13, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4)))).

30. By 29, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))).
By 20, the attacker may know SKE(WeakDH,e_1,sign(k_4,collision)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision)))).

31. By 30, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))).
By 23, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).

32. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

33. By 26, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

34. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

35. By 22, the attacker may know e2b(BadElement).
By 34, the attacker may know master_secret.
By 33, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

36. By 35, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 32, the attacker may know client_finished.
By 31, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).

37. By 36, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).

38. By 31, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))).
By 37, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).

39. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

40. By 35, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 39, the attacker may know server_finished.
By 38, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).

41. By 40, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))))).

42. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 16 may be read at get {46}.
The message SKE(WeakDH,e_1,sign(k_4,collision)) that the attacker may have by 20 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))))))) that the attacker may have by 41 may be received at input {26}.
So the entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be inserted in a table at insert {31}.
table(clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

43. By 9, the attacker may know sr_12.
By 26, the attacker may know cr_18.
Using the function 2-tuple the attacker may obtain (sr_12,cr_18).
attacker((sr_12,cr_18)).

44. Using the function client_key_expansion the attacker may obtain client_key_expansion.
attacker(client_key_expansion).

45. By 35, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know client_key_expansion.
By 43, the attacker may know (sr_12,cr_18).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))).

46. By 45, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)).
Using the function b2ae the attacker may obtain b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))).
attacker(b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18)))).

47. The entry clientSession(cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,aaa_5,ppp_5))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) that may be in a table by 42 may be read at get {165}.
The message b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))) that the attacker may have by 46 may be received at input {163}.
So event ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)) may be executed at {164}.
end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).

48. By 47, end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).
The goal is reached, represented in the following fact:
end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4))).


Unified offer_2 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(sr_12) && attacker(k_4) -> end(ClientAEKeyLeaked(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(k_4)))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

new cr: random creating cr_18 at {2} in copy a_14

in(io, a_15) at {3} in copy a_14

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_15 at {4} in copy a_14

in(io, SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))) at {5} in copy a_14

in(io, CRT(pk(a_19))) at {9} in copy a_14

in(io, (a_20,a_19)) at {110} in copy a_13

event WeakOrCompromisedKey(pk(a_19)) at {111} in copy a_13

insert longTermKeys_tbl(a_20,a_19,pk(a_19)) at {112} in copy a_13

get longTermKeys_tbl(a_20,a_19,pk(a_19)) at {46} in copy a_14

in(io, SKE(WeakDH,a_21,sign(a_19,collision))) at {12} in copy a_14

new x: bitstring creating x_3 at {15} in copy a_14

out(io, CKE(e2b(BadElement))) at {21} in copy a_14

out(io, FIN(~M_2)) with ~M_2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_finished,((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement)))) at {24} in copy a_14

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),server_finished,(((((CH(~M,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),client_finished,((((CH(~M,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),server_finished,(((((CH(~M,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),client_finished,((((CH(~M,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),server_finished,(((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_finished,((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement))))))) at {26} in copy a_14

event ClientFinished(TLS12,cr_18,a_16,NoPSK,pk(a_19),a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_key_expansion,(a_16,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),server_key_expansion,(a_16,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_finished,((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16))) at {30} in copy a_14

insert clientSession(cr_18,a_16,NoPSK,pk(a_19),a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_key_expansion,(a_16,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),server_key_expansion,(a_16,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_finished,((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16))) at {31} in copy a_14

get clientSession(cr_18,a_16,NoPSK,pk(a_19),a_15,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_key_expansion,(a_16,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),server_key_expansion,(a_16,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_finished,((((CH(cr_18,a_15),SH(a_16,nego(TLS12,DHE(WeakDH),WeakHash,a_17,a_18))),CRT(pk(a_19))),SKE(WeakDH,a_21,sign(a_19,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16))) at {165} in copy a_22

in(io, b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),client_key_expansion,(a_16,~M)))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_16)),client_key_expansion,(a_16,~M)) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_16)),client_key_expansion,(a_16,cr_18)) at {163} in copy a_22

event ClientAEKeyLeaked(TLS12,cr_18,a_16,NoPSK,pk(a_19)) at {164} in copy a_22 (goal)

The event ClientAEKeyLeaked(TLS12,cr_18,a_16,NoPSK,pk(a_19)) is executed at {164} in copy a_22.
A trace has been found.
RESULT event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 371 rules (162 with conclusion selected). Queue: 86 rules.
600 rules inserted. Base: 498 rules (191 with conclusion selected). Queue: 195 rules.
800 rules inserted. Base: 572 rules (199 with conclusion selected). Queue: 277 rules.
1000 rules inserted. Base: 637 rules (211 with conclusion selected). Queue: 321 rules.
1200 rules inserted. Base: 716 rules (217 with conclusion selected). Queue: 310 rules.
1400 rules inserted. Base: 788 rules (248 with conclusion selected). Queue: 401 rules.
1600 rules inserted. Base: 842 rules (257 with conclusion selected). Queue: 403 rules.
1800 rules inserted. Base: 917 rules (290 with conclusion selected). Queue: 386 rules.
2000 rules inserted. Base: 967 rules (309 with conclusion selected). Queue: 409 rules.
2200 rules inserted. Base: 1047 rules (358 with conclusion selected). Queue: 376 rules.
2400 rules inserted. Base: 1138 rules (394 with conclusion selected). Queue: 353 rules.
2600 rules inserted. Base: 1261 rules (472 with conclusion selected). Queue: 303 rules.
2800 rules inserted. Base: 1371 rules (523 with conclusion selected). Queue: 286 rules.
3000 rules inserted. Base: 1479 rules (569 with conclusion selected). Queue: 262 rules.
3200 rules inserted. Base: 1567 rules (612 with conclusion selected). Queue: 234 rules.
3400 rules inserted. Base: 1681 rules (667 with conclusion selected). Queue: 223 rules.
3600 rules inserted. Base: 1756 rules (727 with conclusion selected). Queue: 217 rules.
3800 rules inserted. Base: 1838 rules (753 with conclusion selected). Queue: 218 rules.
4000 rules inserted. Base: 1838 rules (762 with conclusion selected). Queue: 152 rules.
4200 rules inserted. Base: 1863 rules (786 with conclusion selected). Queue: 74 rules.
4400 rules inserted. Base: 1963 rules (823 with conclusion selected). Queue: 29 rules.
Starting query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption)))
goal reachable: begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
x_4 = x_2[p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2]

1. We assume as hypothesis that
attacker(o_16).

2. We assume as hypothesis that
attacker(pt_9).

3. We assume as hypothesis that
attacker(a_13).

4. Using the function WeakHash the attacker may obtain WeakHash.
attacker(WeakHash).

5. Using the function StrongDH the attacker may obtain StrongDH.
attacker(StrongDH).

6. By 5, the attacker may know StrongDH.
Using the function DHE the attacker may obtain DHE(StrongDH).
attacker(DHE(StrongDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(StrongDH).
By 4, the attacker may know WeakHash.
By 3, the attacker may know a_13.
By 2, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9).
attacker(nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))).

11. We assume as hypothesis that
attacker(sn_2).

12. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

13. By 12, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

14. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

15. We assume as hypothesis that
attacker(offer_2).

16. We assume as hypothesis that
attacker(cr_19).

17. By 16, the attacker may know cr_19.
By 15, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_19,offer_2).
attacker(CH(cr_19,offer_2)).

18. We assume as hypothesis that
attacker(pt_10).

19. We assume as hypothesis that
attacker(a_14).

20. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(StrongDH).
By 4, the attacker may know WeakHash.
By 19, the attacker may know a_14.
By 18, the attacker may know pt_10.
Using the function nego the attacker may obtain nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10).
attacker(nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10)).

21. We assume as hypothesis that
attacker(xxx_2).

22. By 21, the attacker may know xxx_2.
By 20, the attacker may know nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10)).
attacker(SH(xxx_2,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))).

23. The message CH(cr_19,offer_2) that the attacker may have by 17 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10)) that the attacker may have by 22 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {103}.
The event ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(StrongDH)) may be executed at {56}.
So the message SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision)) may be sent to the attacker at output {67}.
attacker(SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))).

24. By 23, the attacker may know SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision)).
Using the function 3-proj-SKE the attacker may obtain sign(k_4,collision).
attacker(sign(k_4,collision)).

25. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

26. By 5, the attacker may know StrongDH.
By 25, the attacker may know BadElement.
By 24, the attacker may know sign(k_4,collision).
Using the function SKE the attacker may obtain SKE(StrongDH,BadElement,sign(k_4,collision)).
attacker(SKE(StrongDH,BadElement,sign(k_4,collision))).

27. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
The message SKE(StrongDH,BadElement,sign(k_4,collision)) that the attacker may have by 26 may be received at input {12}.
So the message CKE(e2b(dh_ideal(G,x_3))) may be sent to the attacker at output {21}.
attacker(CKE(e2b(dh_ideal(G,x_3)))).

28. By 27, the attacker may know CKE(e2b(dh_ideal(G,x_3))).
Using the function 1-proj-CKE the attacker may obtain e2b(dh_ideal(G,x_3)).
attacker(e2b(dh_ideal(G,x_3))).

29. By 28, the attacker may know e2b(dh_ideal(G,x_3)).
Using the function 1-proj-e2b the attacker may obtain dh_ideal(G,x_3).
attacker(dh_ideal(G,x_3)).

30. By 29, the attacker may know dh_ideal(G,x_3).
Using the function e2b the attacker may obtain e2b(dh_ideal(G,x_3)).
attacker(e2b(dh_ideal(G,x_3))).

31. By 30, the attacker may know e2b(dh_ideal(G,x_3)).
Using the function CKE the attacker may obtain CKE(e2b(dh_ideal(G,x_3))).
attacker(CKE(e2b(dh_ideal(G,x_3)))).

32. The attacker has some term offer_3.
attacker(offer_3).

33. The message offer_3 that the attacker may have by 32 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

34. By 33, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

35. By 34, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

36. By 35, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)))).

37. By 36, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))).
By 13, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4)))).

38. By 37, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))).
By 26, the attacker may know SKE(StrongDH,BadElement,sign(k_4,collision)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision)))).

39. By 38, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))).
By 31, the attacker may know CKE(e2b(dh_ideal(G,x_3))).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))).

40. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

41. By 34, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

42. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

43. By 25, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

44. By 43, the attacker may know e2b(BadElement).
By 42, the attacker may know master_secret.
By 41, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

45. By 44, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 40, the attacker may know client_finished.
By 39, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))).

46. By 45, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))).

47. By 39, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))).
By 46, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))).

48. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

49. By 44, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 48, the attacker may know server_finished.
By 47, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))))).

50. By 49, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))))).

51. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
The message SKE(StrongDH,BadElement,sign(k_4,collision)) that the attacker may have by 26 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))))))) that the attacker may have by 50 may be received at input {26}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be executed at {30}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

52. By 51, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(o_16) && attacker(pt_9) && attacker(a_13) && attacker(sr_12) && attacker(sn_2) && attacker(offer_2) && attacker(cr_19) && attacker(pt_10) && attacker(a_14) && attacker(xxx_2) && begin(ServerChoosesKEX(cr_19,sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = sn_2,!1 = @sid_1]),TLS12,DHE(StrongDH))) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(k_2[a_2 = sn_2,!1 = @sid_1]),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_12)),client_key_expansion,(sr_12,cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_12)),server_key_expansion,(sr_12,cr[!1 = @sid]))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_12)),client_finished,((((CH(cr[!1 = @sid],o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_2[a_2 = sn_2,!1 = @sid_1]))),SKE(StrongDH,BadElement,sign(k_2[a_2 = sn_2,!1 = @sid_1],collision))),CKE(e2b(dh_ideal(G,x[s = sign(k_2[a_2 = sn_2,!1 = @sid_1],collision),e = BadElement,xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]))))),tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_12))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))) at {5} in copy a_13

in(io, CH(a_18,a_19)) at {48} in copy a_20

in(io, SH(a_21,nego(TLS12,DHE(StrongDH),WeakHash,a_22,a_23))) at {49} in copy a_20

new sr_1: random creating sr_12 at {52} in copy a_20

out(io, SH(~M_2,nego(~M_3,DHE(StrongDH),WeakHash,~M_4,~M_5))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = a_22, ~M_5 = a_23 at {53} in copy a_20

in(io, a_24) at {106} in copy a_25

new k_2: privkey creating k_4 at {107} in copy a_25

insert longTermKeys_tbl(a_24,k_4,pk(k_4)) at {108} in copy a_25

out(io, ~M_6) with ~M_6 = pk(k_4) at {109} in copy a_25

in(io, CRT(~M_6)) with ~M_6 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_24,k_4,pk(k_4)) at {46} in copy a_13

get longTermKeys_tbl(a_24,k_4,pk(k_4)) at {103} in copy a_20

event ServerChoosesVersion(a_18,sr_12,pk(k_4),TLS12) at {55} in copy a_20

event ServerChoosesKEX(a_18,sr_12,pk(k_4),TLS12,DHE(StrongDH)) at {56} in copy a_20

event ServerChoosesAE(a_18,sr_12,pk(k_4),TLS12,a_22) at {57} in copy a_20

event ServerChoosesHash(a_18,sr_12,pk(k_4),TLS12,WeakHash) at {58} in copy a_20

out(io, CRT(~M_7)) with ~M_7 = pk(k_4) at {59} in copy a_20

new x_2: bitstring creating x_3 at {62} in copy a_20

out(io, SKE(StrongDH,~M_8,~M_9)) with ~M_8 = dh_ideal(G,x_3), ~M_9 = sign(k_4,collision) at {67} in copy a_20

in(io, SKE(StrongDH,BadElement,~M_9)) with ~M_9 = sign(k_4,collision) at {12} in copy a_13

new x: bitstring creating x_4 at {15} in copy a_13

out(io, CKE(e2b(~M_10))) with ~M_10 = dh_ideal(G,x_4) at {21} in copy a_13

out(io, FIN(~M_11)) with ~M_11 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_4))))) at {24} in copy a_13

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(StrongDH,BadElement,~M_9)),CKE(e2b(~M_10))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(StrongDH,BadElement,~M_9)),CKE(e2b(~M_10))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),server_finished,(((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(StrongDH,BadElement,~M_9)),CKE(e2b(~M_10))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,a_15)),client_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(~M_6)),SKE(StrongDH,BadElement,~M_9)),CKE(e2b(~M_10))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_finished,(((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_4)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_4)))))))) at {26} in copy a_13

event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_4))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) at {30} in copy a_13 (goal)

The event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15)),client_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,DHE(StrongDH),WeakHash,a_16,a_17))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_4))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,a_15))) is executed at {30} in copy a_13.
A trace has been found.
RESULT event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) is false.
-- Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 371 rules (162 with conclusion selected). Queue: 86 rules.
600 rules inserted. Base: 498 rules (191 with conclusion selected). Queue: 195 rules.
800 rules inserted. Base: 572 rules (199 with conclusion selected). Queue: 277 rules.
1000 rules inserted. Base: 637 rules (211 with conclusion selected). Queue: 321 rules.
1200 rules inserted. Base: 716 rules (217 with conclusion selected). Queue: 310 rules.
1400 rules inserted. Base: 788 rules (248 with conclusion selected). Queue: 401 rules.
1600 rules inserted. Base: 842 rules (257 with conclusion selected). Queue: 403 rules.
1800 rules inserted. Base: 917 rules (290 with conclusion selected). Queue: 386 rules.
2000 rules inserted. Base: 967 rules (309 with conclusion selected). Queue: 409 rules.
2200 rules inserted. Base: 1047 rules (358 with conclusion selected). Queue: 376 rules.
2400 rules inserted. Base: 1138 rules (394 with conclusion selected). Queue: 353 rules.
2600 rules inserted. Base: 1261 rules (472 with conclusion selected). Queue: 303 rules.
2800 rules inserted. Base: 1371 rules (523 with conclusion selected). Queue: 286 rules.
3000 rules inserted. Base: 1479 rules (569 with conclusion selected). Queue: 262 rules.
3200 rules inserted. Base: 1567 rules (612 with conclusion selected). Queue: 234 rules.
3400 rules inserted. Base: 1681 rules (667 with conclusion selected). Queue: 223 rules.
3600 rules inserted. Base: 1756 rules (727 with conclusion selected). Queue: 217 rules.
3800 rules inserted. Base: 1838 rules (753 with conclusion selected). Queue: 218 rules.
4000 rules inserted. Base: 1838 rules (762 with conclusion selected). Queue: 152 rules.
4200 rules inserted. Base: 1863 rules (786 with conclusion selected). Queue: 74 rules.
4400 rules inserted. Base: 1963 rules (823 with conclusion selected). Queue: 29 rules.
Starting query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(r_2) && attacker(h_3) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_3,a_14,pt_10),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),client_finished,(((CH(cr_19,o_16),SH(sr_13,nego(TLS12,RSA(r_2),h_3,a_14,pt_10))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_19,sr_13))))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
pms_4 = pms_1[xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(r_2),h_3,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
pms_4 = pms_1[xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2]

1. We assume as hypothesis that
attacker(o_16).

2. We assume as hypothesis that
attacker(pt_9).

3. We assume as hypothesis that
attacker(a_13).

4. We assume as hypothesis that
attacker(h_2).

5. We assume as hypothesis that
attacker(r_2).

6. By 5, the attacker may know r_2.
Using the function RSA the attacker may obtain RSA(r_2).
attacker(RSA(r_2)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know RSA(r_2).
By 4, the attacker may know h_2.
By 3, the attacker may know a_13.
By 2, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
attacker(nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).

11. We assume as hypothesis that
attacker(sn_2).

12. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

13. By 12, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

14. The message sn_2 that the attacker may have by 11 may be received at input {106}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

15. We assume as hypothesis that
attacker(offer_2).

16. We assume as hypothesis that
attacker(cr_19).

17. By 16, the attacker may know cr_19.
By 15, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_19,offer_2).
attacker(CH(cr_19,offer_2)).

18. We assume as hypothesis that
attacker(pt_10).

19. We assume as hypothesis that
attacker(a_14).

20. We assume as hypothesis that
attacker(h_3).

21. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

22. By 21, the attacker may know WeakRSADecryption.
Using the function RSA the attacker may obtain RSA(WeakRSADecryption).
attacker(RSA(WeakRSADecryption)).

23. By 7, the attacker may know TLS12.
By 22, the attacker may know RSA(WeakRSADecryption).
By 20, the attacker may know h_3.
By 19, the attacker may know a_14.
By 18, the attacker may know pt_10.
Using the function nego the attacker may obtain nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10).
attacker(nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10)).

24. We assume as hypothesis that
attacker(xxx_2).

25. By 24, the attacker may know xxx_2.
By 23, the attacker may know nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10)).
attacker(SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10))).

26. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
So the message CKE(rsa_enc(pk(k_4),pms_4)) may be sent to the attacker at output {35}.
attacker(CKE(rsa_enc(pk(k_4),pms_4))).

27. By 26, the attacker may know CKE(rsa_enc(pk(k_4),pms_4)).
Using the function 1-proj-CKE the attacker may obtain rsa_enc(pk(k_4),pms_4).
attacker(rsa_enc(pk(k_4),pms_4)).

28. By 27, the attacker may know rsa_enc(pk(k_4),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_4),pms_4)).
attacker(CKE(rsa_enc(pk(k_4),pms_4))).

29. The message CH(cr_19,offer_2) that the attacker may have by 17 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10)) that the attacker may have by 25 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {103}.
The event ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,RSA(WeakRSADecryption)) may be executed at {56}.
The event ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,h_3) may be executed at {58}.
The message CKE(rsa_enc(pk(k_4),pms_4)) that the attacker may have by 28 may be received at input {86}.
So the message (pms_4,sign(k_4,pms_4)) may be sent to the attacker at output {89}.
attacker((pms_4,sign(k_4,pms_4))).

30. By 29, the attacker may know (pms_4,sign(k_4,pms_4)).
Using the function 1-proj-2-tuple the attacker may obtain pms_4.
attacker(pms_4).

31. By 12, the attacker may know pk(k_4).
By 30, the attacker may know pms_4.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(k_4),pms_4).
attacker(rsa_enc(pk(k_4),pms_4)).

32. By 31, the attacker may know rsa_enc(pk(k_4),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(k_4),pms_4)).
attacker(CKE(rsa_enc(pk(k_4),pms_4))).

33. The attacker has some term offer_3.
attacker(offer_3).

34. The message offer_3 that the attacker may have by 33 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

35. By 34, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

36. By 35, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

37. By 36, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)))).

38. By 37, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
By 13, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4)))).

39. By 38, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))).
By 32, the attacker may know CKE(rsa_enc(pk(k_4),pms_4)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).

40. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

41. By 35, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

42. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

43. By 30, the attacker may know pms_4.
By 42, the attacker may know master_secret.
By 41, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
attacker(tls12_prf(pms_4,master_secret,(cr_18,sr_12))).

44. By 43, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 40, the attacker may know client_finished.
By 39, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))).

45. By 44, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))).

46. By 39, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))).
By 45, the attacker may know FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))).

47. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

48. By 43, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 47, the attacker may know server_finished.
By 46, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))))).

49. By 48, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))))).

50. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 14 may be read at get {46}.
The message FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))))))) that the attacker may have by 49 may be received at input {40}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))) may be executed at {44}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).

51. By 50, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(o_16) && attacker(pt_9) && attacker(a_13) && attacker(h_2) && attacker(r_2) && attacker(sr_12) && attacker(sn_2) && attacker(offer_2) && attacker(cr_19) && attacker(pt_10) && attacker(a_14) && attacker(h_3) && attacker(xxx_2) && begin(ServerChoosesKEX(cr_19,sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = sn_2,!1 = @sid_1]),TLS12,RSA(WeakRSADecryption))) && begin(ServerChoosesHash(cr_19,sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_3,a_14,pt_10),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_2],pk(k_2[a_2 = sn_2,!1 = @sid_1]),TLS12,h_3)) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(k_2[a_2 = sn_2,!1 = @sid_1]),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_1[xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_key_expansion,(sr_12,cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(pms_1[xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),server_key_expansion,(sr_12,cr[!1 = @sid]))),tls12_prf(tls12_prf(pms_1[xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_finished,(((CH(cr[!1 = @sid],o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(k_2[a_2 = sn_2,!1 = @sid_1]))),CKE(rsa_enc(pk(k_2[a_2 = sn_2,!1 = @sid_1]),pms_1[xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid])))),tls12_prf(pms_1[xxx = k_2[a_2 = sn_2,!1 = @sid_1],sn = sn_2,p = pk(k_2[a_2 = sn_2,!1 = @sid_1]),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))) at {5} in copy a_13

in(io, CH(a_20,a_21)) at {48} in copy a_22

in(io, SH(a_23,nego(TLS12,RSA(WeakRSADecryption),a_24,a_25,a_26))) at {49} in copy a_22

new sr_1: random creating sr_12 at {52} in copy a_22

out(io, SH(~M_2,nego(~M_3,RSA(~M_4),~M_5,~M_6,~M_7))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = WeakRSADecryption, ~M_5 = a_24, ~M_6 = a_25, ~M_7 = a_26 at {53} in copy a_22

in(io, a_27) at {106} in copy a_28

new k_2: privkey creating k_4 at {107} in copy a_28

insert longTermKeys_tbl(a_27,k_4,pk(k_4)) at {108} in copy a_28

out(io, ~M_8) with ~M_8 = pk(k_4) at {109} in copy a_28

in(io, CRT(~M_8)) with ~M_8 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_27,k_4,pk(k_4)) at {46} in copy a_13

new pms_1: bitstring creating pms_4 at {33} in copy a_13

out(io, CKE(~M_9)) with ~M_9 = rsa_enc(pk(k_4),pms_4) at {35} in copy a_13

out(io, FIN(~M_10)) with ~M_10 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_finished,(((CH(cr_18,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))) at {38} in copy a_13

get longTermKeys_tbl(a_27,k_4,pk(k_4)) at {103} in copy a_22

event ServerChoosesVersion(a_20,sr_12,pk(k_4),TLS12) at {55} in copy a_22

event ServerChoosesKEX(a_20,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption)) at {56} in copy a_22

event ServerChoosesAE(a_20,sr_12,pk(k_4),TLS12,a_25) at {57} in copy a_22

event ServerChoosesHash(a_20,sr_12,pk(k_4),TLS12,a_24) at {58} in copy a_22

out(io, CRT(~M_11)) with ~M_11 = pk(k_4) at {59} in copy a_22

in(io, CKE(~M_9)) with ~M_9 = rsa_enc(pk(k_4),pms_4) at {86} in copy a_22

out(io, (~M_12,~M_13)) with ~M_12 = pms_4, ~M_13 = sign(k_4,pms_4) at {89} in copy a_22

in(io, FIN(tls12_prf(tls12_prf(~M_12,master_secret,(~M,a_15)),server_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(~M_8)),CKE(~M_9)),FIN(~M_10))))) with tls12_prf(tls12_prf(~M_12,master_secret,(~M,a_15)),server_finished,((((CH(~M,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(~M_8)),CKE(~M_9)),FIN(~M_10))) = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),server_finished,((((CH(cr_18,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_finished,(((CH(cr_18,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))) at {40} in copy a_13

event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,RSA(a_16),a_17,a_18,a_19),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_finished,(((CH(cr_18,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_15))) at {44} in copy a_13 (goal)

The event ClientFinished(TLS12,cr_18,a_15,NoPSK,pk(k_4),a_14,nego(TLS12,RSA(a_16),a_17,a_18,a_19),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_key_expansion,(a_15,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),server_key_expansion,(a_15,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_15)),client_finished,(((CH(cr_18,a_14),SH(a_15,nego(TLS12,RSA(a_16),a_17,a_18,a_19))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_15))) is executed at {44} in copy a_13.
A trace has been found.
RESULT event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 371 rules (162 with conclusion selected). Queue: 86 rules.
600 rules inserted. Base: 498 rules (191 with conclusion selected). Queue: 195 rules.
800 rules inserted. Base: 572 rules (199 with conclusion selected). Queue: 277 rules.
1000 rules inserted. Base: 637 rules (211 with conclusion selected). Queue: 321 rules.
1200 rules inserted. Base: 716 rules (217 with conclusion selected). Queue: 310 rules.
1400 rules inserted. Base: 788 rules (248 with conclusion selected). Queue: 401 rules.
1600 rules inserted. Base: 842 rules (257 with conclusion selected). Queue: 403 rules.
1800 rules inserted. Base: 917 rules (290 with conclusion selected). Queue: 386 rules.
2000 rules inserted. Base: 967 rules (309 with conclusion selected). Queue: 409 rules.
2200 rules inserted. Base: 1047 rules (358 with conclusion selected). Queue: 376 rules.
2400 rules inserted. Base: 1138 rules (394 with conclusion selected). Queue: 353 rules.
2600 rules inserted. Base: 1261 rules (472 with conclusion selected). Queue: 303 rules.
2800 rules inserted. Base: 1371 rules (523 with conclusion selected). Queue: 286 rules.
3000 rules inserted. Base: 1479 rules (569 with conclusion selected). Queue: 262 rules.
3200 rules inserted. Base: 1567 rules (612 with conclusion selected). Queue: 234 rules.
3400 rules inserted. Base: 1681 rules (667 with conclusion selected). Queue: 223 rules.
3600 rules inserted. Base: 1756 rules (727 with conclusion selected). Queue: 217 rules.
3800 rules inserted. Base: 1838 rules (753 with conclusion selected). Queue: 218 rules.
4000 rules inserted. Base: 1838 rules (762 with conclusion selected). Queue: 152 rules.
4200 rules inserted. Base: 1863 rules (786 with conclusion selected). Queue: 74 rules.
4400 rules inserted. Base: 1963 rules (823 with conclusion selected). Queue: 29 rules.
Starting query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]

1. We assume as hypothesis that
attacker(o_16).

2. We assume as hypothesis that
attacker(pt_10).

3. We assume as hypothesis that
attacker(a_14).

4. Using the function StrongHash the attacker may obtain StrongHash.
attacker(StrongHash).

5. Using the function WeakDH the attacker may obtain WeakDH.
attacker(WeakDH).

6. By 5, the attacker may know WeakDH.
Using the function DHE the attacker may obtain DHE(WeakDH).
attacker(DHE(WeakDH)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 3, the attacker may know a_14.
By 2, the attacker may know pt_10.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10)).

9. We assume as hypothesis that
attacker(offer_2).

10. The attacker has some term offer_3.
attacker(offer_3).

11. The message offer_3 that the attacker may have by 10 may be received at input {3}.
So the message CH(cr_18,offer_3) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_3)).

12. By 11, the attacker may know CH(cr_18,offer_3).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

13. By 12, the attacker may know cr_18.
By 9, the attacker may know offer_2.
Using the function CH the attacker may obtain CH(cr_18,offer_2).
attacker(CH(cr_18,offer_2)).

14. We assume as hypothesis that
attacker(pt_9).

15. We assume as hypothesis that
attacker(a_13).

16. By 7, the attacker may know TLS12.
By 6, the attacker may know DHE(WeakDH).
By 4, the attacker may know StrongHash.
By 15, the attacker may know a_13.
By 14, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9).
attacker(nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).

17. We assume as hypothesis that
attacker(xxx_2).

18. By 17, the attacker may know xxx_2.
By 16, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9).
Using the function SH the attacker may obtain SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).
attacker(SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))).

19. The message CH(cr_18,offer_2) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) that the attacker may have by 18 may be received at input {49}.
So the message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) may be sent to the attacker at output {53}.
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))).

20. By 19, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)).
Using the function 1-proj-SH the attacker may obtain sr_12.
attacker(sr_12).

21. By 20, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10)).
attacker(SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))).

22. We assume as hypothesis that
attacker(sn_2).

23. The message sn_2 that the attacker may have by 22 may be received at input {106}.
So the message pk(k_4) may be sent to the attacker at output {109}.
attacker(pk(k_4)).

24. By 23, the attacker may know pk(k_4).
Using the function CRT the attacker may obtain CRT(pk(k_4)).
attacker(CRT(pk(k_4))).

25. The message sn_2 that the attacker may have by 22 may be received at input {106}.
So the entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) may be inserted in a table at insert {108}.
table(longTermKeys_tbl(sn_2,k_4,pk(k_4))).

26. The message CH(cr_18,offer_2) that the attacker may have by 13 may be received at input {48}.
The message SH(xxx_2,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9)) that the attacker may have by 18 may be received at input {49}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 25 may be read at get {103}.
The event ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH)) may be executed at {56}.
The event ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash) may be executed at {58}.
So the message SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))) may be sent to the attacker at output {67}.
attacker(SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).

27. By 26, the attacker may know SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
Using the function 3-proj-SKE the attacker may obtain sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))).
attacker(sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).

28. Using the function BadElement the attacker may obtain BadElement.
attacker(BadElement).

29. By 5, the attacker may know WeakDH.
By 28, the attacker may know BadElement.
By 27, the attacker may know sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))).
Using the function SKE the attacker may obtain SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
attacker(SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).

30. By 28, the attacker may know BadElement.
Using the function e2b the attacker may obtain e2b(BadElement).
attacker(e2b(BadElement)).

31. By 30, the attacker may know e2b(BadElement).
Using the function CKE the attacker may obtain CKE(e2b(BadElement)).
attacker(CKE(e2b(BadElement))).

32. By 12, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

33. By 32, the attacker may know CH(cr_18,o_16).
By 21, the attacker may know SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10)))).

34. By 33, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))).
By 24, the attacker may know CRT(pk(k_4)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4)))).

35. By 34, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))).
By 29, the attacker may know SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))))).

36. By 35, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))).
By 31, the attacker may know CKE(e2b(BadElement)).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).

37. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

38. By 12, the attacker may know cr_18.
By 20, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

39. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

40. By 30, the attacker may know e2b(BadElement).
By 39, the attacker may know master_secret.
By 38, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
attacker(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))).

41. By 40, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 37, the attacker may know client_finished.
By 36, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).

42. By 41, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).

43. By 36, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))).
By 42, the attacker may know FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))).
Using the function 2-tuple the attacker may obtain (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).
attacker((((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).

44. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

45. By 40, the attacker may know tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)).
By 44, the attacker may know server_finished.
By 43, the attacker may know (((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).
attacker(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))).

46. By 45, the attacker may know tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))).
attacker(FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))))).

47. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10)) that the attacker may have by 21 may be received at input {5}.
The message CRT(pk(k_4)) that the attacker may have by 24 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,k_4,pk(k_4)) that may be in a table by 25 may be read at get {46}.
The message SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement)))) that the attacker may have by 29 may be received at input {12}.
The message FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))))))) that the attacker may have by 46 may be received at input {26}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) may be executed at {30}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).

48. By 47, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)))).


Unified offer_3 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(o_16) && attacker(pt_10) && attacker(a_14) && attacker(offer_2) && attacker(pt_9) && attacker(a_13) && attacker(xxx_2) && attacker(sn_2) && begin(ServerChoosesKEX(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_2[a_2 = sn_2,!1 = @sid_2]),TLS12,DHE(WeakDH))) && begin(ServerChoosesHash(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],pk(k_2[a_2 = sn_2,!1 = @sid_2]),TLS12,StrongHash)) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],NoPSK,pk(k_2[a_2 = sn_2,!1 = @sid_2]),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1])),client_key_expansion,(sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1])),server_key_expansion,(sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],cr[!1 = @sid]))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1])),client_finished,((((CH(cr[!1 = @sid],o_16),SH(sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_2[a_2 = sn_2,!1 = @sid_2]))),SKE(WeakDH,BadElement,sign(k_2[a_2 = sn_2,!1 = @sid_2],hash_ideal((cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1],WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr[!1 = @sid],sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr[!1 = @sid],!1 = @sid_1]))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

new cr: random creating cr_18 at {2} in copy a_13

in(io, a_14) at {3} in copy a_13

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_14 at {4} in copy a_13

in(io, CH(~M,a_15)) with ~M = cr_18 at {48} in copy a_16

in(io, SH(a_17,nego(TLS12,DHE(WeakDH),StrongHash,a_18,a_19))) at {49} in copy a_16

new sr_1: random creating sr_12 at {52} in copy a_16

out(io, SH(~M_2,nego(~M_3,DHE(WeakDH),StrongHash,~M_4,~M_5))) with ~M_2 = sr_12, ~M_3 = TLS12, ~M_4 = a_18, ~M_5 = a_19 at {53} in copy a_16

in(io, SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))) with ~M_2 = sr_12 at {5} in copy a_13

in(io, a_22) at {106} in copy a_23

new k_2: privkey creating k_4 at {107} in copy a_23

insert longTermKeys_tbl(a_22,k_4,pk(k_4)) at {108} in copy a_23

out(io, ~M_6) with ~M_6 = pk(k_4) at {109} in copy a_23

in(io, CRT(~M_6)) with ~M_6 = pk(k_4) at {9} in copy a_13

get longTermKeys_tbl(a_22,k_4,pk(k_4)) at {46} in copy a_13

get longTermKeys_tbl(a_22,k_4,pk(k_4)) at {103} in copy a_16

event ServerChoosesVersion(cr_18,sr_12,pk(k_4),TLS12) at {55} in copy a_16

event ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH)) at {56} in copy a_16

event ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_18) at {57} in copy a_16

event ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash) at {58} in copy a_16

out(io, CRT(~M_7)) with ~M_7 = pk(k_4) at {59} in copy a_16

new x_2: bitstring creating x_3 at {62} in copy a_16

out(io, SKE(WeakDH,BadElement,~M_8)) with ~M_8 = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))) at {67} in copy a_16

in(io, SKE(WeakDH,BadElement,~M_8)) with ~M_8 = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))) at {12} in copy a_13

new x: bitstring creating x_4 at {15} in copy a_13

out(io, CKE(e2b(BadElement))) at {21} in copy a_13

out(io, FIN(~M_9)) with ~M_9 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))) at {24} in copy a_13

in(io, FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))))))))) with tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),server_finished,(((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(~M,~M_2)),client_finished,((((CH(~M,a_14),SH(~M_2,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(~M_6)),SKE(WeakDH,BadElement,~M_8)),CKE(e2b(BadElement))))))) = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))) at {26} in copy a_13

event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) at {30} in copy a_13 (goal)

The event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),a_14,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,a_14),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_20,a_21))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))) is executed at {30} in copy a_13.
A trace has been found.
RESULT event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 370 rules (162 with conclusion selected). Queue: 81 rules.
600 rules inserted. Base: 497 rules (191 with conclusion selected). Queue: 206 rules.
800 rules inserted. Base: 560 rules (199 with conclusion selected). Queue: 280 rules.
1000 rules inserted. Base: 643 rules (214 with conclusion selected). Queue: 296 rules.
1200 rules inserted. Base: 716 rules (228 with conclusion selected). Queue: 372 rules.
1400 rules inserted. Base: 774 rules (257 with conclusion selected). Queue: 381 rules.
1600 rules inserted. Base: 834 rules (268 with conclusion selected). Queue: 379 rules.
1800 rules inserted. Base: 904 rules (300 with conclusion selected). Queue: 400 rules.
2000 rules inserted. Base: 949 rules (325 with conclusion selected). Queue: 389 rules.
2200 rules inserted. Base: 1038 rules (362 with conclusion selected). Queue: 362 rules.
2400 rules inserted. Base: 1149 rules (435 with conclusion selected). Queue: 311 rules.
2600 rules inserted. Base: 1269 rules (507 with conclusion selected). Queue: 312 rules.
2800 rules inserted. Base: 1378 rules (558 with conclusion selected). Queue: 269 rules.
3000 rules inserted. Base: 1461 rules (592 with conclusion selected). Queue: 246 rules.
3200 rules inserted. Base: 1560 rules (639 with conclusion selected). Queue: 219 rules.
3400 rules inserted. Base: 1640 rules (698 with conclusion selected). Queue: 194 rules.
3600 rules inserted. Base: 1743 rules (738 with conclusion selected). Queue: 225 rules.
3800 rules inserted. Base: 1771 rules (755 with conclusion selected). Queue: 175 rules.
4000 rules inserted. Base: 1775 rules (772 with conclusion selected). Queue: 94 rules.
4200 rules inserted. Base: 1840 rules (792 with conclusion selected). Queue: 49 rules.
4400 rules inserted. Base: 1984 rules (830 with conclusion selected). Queue: 23 rules.
Starting query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(r_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]

Derivation:
Abbreviations:
cr_18 = cr[!1 = @sid]
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]

1. We assume as hypothesis that
attacker(o_16).

2. We assume as hypothesis that
attacker(pt_9).

3. We assume as hypothesis that
attacker(a_13).

4. We assume as hypothesis that
attacker(h_2).

5. We assume as hypothesis that
attacker(r_2).

6. By 5, the attacker may know r_2.
Using the function RSA the attacker may obtain RSA(r_2).
attacker(RSA(r_2)).

7. Using the function TLS12 the attacker may obtain TLS12.
attacker(TLS12).

8. By 7, the attacker may know TLS12.
By 6, the attacker may know RSA(r_2).
By 4, the attacker may know h_2.
By 3, the attacker may know a_13.
By 2, the attacker may know pt_9.
Using the function nego the attacker may obtain nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
attacker(nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).

9. We assume as hypothesis that
attacker(sr_12).

10. By 9, the attacker may know sr_12.
By 8, the attacker may know nego(TLS12,RSA(r_2),h_2,a_13,pt_9).
Using the function SH the attacker may obtain SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
attacker(SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).

11. We assume as hypothesis that
attacker(xxx_2).

12. By 11, the attacker may know xxx_2.
Using the function pk the attacker may obtain pk(xxx_2).
attacker(pk(xxx_2)).

13. By 12, the attacker may know pk(xxx_2).
Using the function CRT the attacker may obtain CRT(pk(xxx_2)).
attacker(CRT(pk(xxx_2))).

14. We assume as hypothesis that
attacker(sn_2).

15. By 14, the attacker may know sn_2.
By 11, the attacker may know xxx_2.
Using the function 2-tuple the attacker may obtain (sn_2,xxx_2).
attacker((sn_2,xxx_2)).

16. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

17. The message (sn_2,xxx_2) that the attacker may have by 15 may be received at input {110}.
So the entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) may be inserted in a table at insert {112}.
table(longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2))).

18. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 17 may be read at get {46}.
So the message CKE(rsa_enc(pk(xxx_2),pms_4)) may be sent to the attacker at output {35}.
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

19. By 18, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 1-proj-CKE the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

20. Using the function WeakRSADecryption the attacker may obtain WeakRSADecryption.
attacker(WeakRSADecryption).

21. By 20, the attacker may know WeakRSADecryption.
By 11, the attacker may know xxx_2.
By 19, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function rsa_dec the attacker may obtain success(pms_4,(pms_4,sign(xxx_2,pms_4))).
attacker(success(pms_4,(pms_4,sign(xxx_2,pms_4)))).

22. By 21, the attacker may know success(pms_4,(pms_4,sign(xxx_2,pms_4))).
Using the function 1-proj-success the attacker may obtain pms_4.
attacker(pms_4).

23. By 12, the attacker may know pk(xxx_2).
By 22, the attacker may know pms_4.
Using the function rsa_enc the attacker may obtain rsa_enc(pk(xxx_2),pms_4).
attacker(rsa_enc(pk(xxx_2),pms_4)).

24. By 23, the attacker may know rsa_enc(pk(xxx_2),pms_4).
Using the function CKE the attacker may obtain CKE(rsa_enc(pk(xxx_2),pms_4)).
attacker(CKE(rsa_enc(pk(xxx_2),pms_4))).

25. The attacker has some term offer_2.
attacker(offer_2).

26. The message offer_2 that the attacker may have by 25 may be received at input {3}.
So the message CH(cr_18,offer_2) may be sent to the attacker at output {4}.
attacker(CH(cr_18,offer_2)).

27. By 26, the attacker may know CH(cr_18,offer_2).
Using the function 1-proj-CH the attacker may obtain cr_18.
attacker(cr_18).

28. By 27, the attacker may know cr_18.
By 1, the attacker may know o_16.
Using the function CH the attacker may obtain CH(cr_18,o_16).
attacker(CH(cr_18,o_16)).

29. By 28, the attacker may know CH(cr_18,o_16).
By 10, the attacker may know SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)).
Using the function 2-tuple the attacker may obtain (CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
attacker((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)))).

30. By 29, the attacker may know (CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))).
By 13, the attacker may know CRT(pk(xxx_2)).
Using the function 2-tuple the attacker may obtain ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
attacker(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2)))).

31. By 30, the attacker may know ((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))).
By 24, the attacker may know CKE(rsa_enc(pk(xxx_2),pms_4)).
Using the function 2-tuple the attacker may obtain (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
attacker((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).

32. Using the function client_finished the attacker may obtain client_finished.
attacker(client_finished).

33. By 27, the attacker may know cr_18.
By 9, the attacker may know sr_12.
Using the function 2-tuple the attacker may obtain (cr_18,sr_12).
attacker((cr_18,sr_12)).

34. Using the function master_secret the attacker may obtain master_secret.
attacker(master_secret).

35. By 22, the attacker may know pms_4.
By 34, the attacker may know master_secret.
By 33, the attacker may know (cr_18,sr_12).
Using the function tls12_prf the attacker may obtain tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
attacker(tls12_prf(pms_4,master_secret,(cr_18,sr_12))).

36. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 32, the attacker may know client_finished.
By 31, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).

37. By 36, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).

38. By 31, the attacker may know (((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))).
By 37, the attacker may know FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))).
Using the function 2-tuple the attacker may obtain ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
attacker(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).

39. Using the function server_finished the attacker may obtain server_finished.
attacker(server_finished).

40. By 35, the attacker may know tls12_prf(pms_4,master_secret,(cr_18,sr_12)).
By 39, the attacker may know server_finished.
By 38, the attacker may know ((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))).
Using the function tls12_prf the attacker may obtain tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
attacker(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).

41. By 40, the attacker may know tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))).
Using the function FIN the attacker may obtain FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))).
attacker(FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))))).

42. The message o_16 that the attacker may have by 1 may be received at input {3}.
The message SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9)) that the attacker may have by 10 may be received at input {5}.
The message CRT(pk(xxx_2)) that the attacker may have by 13 may be received at input {9}.
The entry longTermKeys_tbl(sn_2,xxx_2,pk(xxx_2)) that may be in a table by 16 may be read at get {46}.
The message FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))))))) that the attacker may have by 41 may be received at input {40}.
So event ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))) may be executed at {44}.
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).

43. By 42, end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).
The goal is reached, represented in the following fact:
end(ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12)))).


Unified offer_2 with o_16
Iterating unifyDerivation.
Fixpoint reached: nothing more to unify.
The clause after unifyDerivation is
attacker(o_16) && attacker(pt_9) && attacker(a_13) && attacker(h_2) && attacker(r_2) && attacker(sr_12) && attacker(xxx_2) && attacker(sn_2) -> end(ClientFinished(TLS12,cr[!1 = @sid],sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_key_expansion,(sr_12,cr[!1 = @sid]))),b2ae(tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),server_key_expansion,(sr_12,cr[!1 = @sid]))),tls12_prf(tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12)),client_finished,(((CH(cr[!1 = @sid],o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid])))),tls12_prf(pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid],master_secret,(cr[!1 = @sid],sr_12))))
This clause still contradicts the query.
A more detailed output of the traces is available with
  set traceDisplay = long.

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_13

event WeakOrCompromisedKey(NoPubKey) at {105} in copy a_14

new cr: random creating cr_18 at {2} in copy a_15

in(io, a_16) at {3} in copy a_15

out(io, CH(~M,~M_1)) with ~M = cr_18, ~M_1 = a_16 at {4} in copy a_15

in(io, SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))) at {5} in copy a_15

in(io, CRT(pk(a_22))) at {9} in copy a_15

in(io, (a_23,a_22)) at {110} in copy a_14

event WeakOrCompromisedKey(pk(a_22)) at {111} in copy a_14

insert longTermKeys_tbl(a_23,a_22,pk(a_22)) at {112} in copy a_14

get longTermKeys_tbl(a_23,a_22,pk(a_22)) at {46} in copy a_15

new pms_1: bitstring creating pms_4 at {33} in copy a_15

out(io, CKE(~M_2)) with ~M_2 = rsa_enc(pk(a_22),pms_4) at {35} in copy a_15

out(io, FIN(~M_3)) with ~M_3 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))) at {38} in copy a_15

in(io, FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))))) with tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),server_finished,((((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)),FIN(tls12_prf(tls12_prf(1-proj-success(rsa_dec(WeakRSADecryption,a_22,~M_2)),master_secret,(~M,a_17)),client_finished,(((CH(~M,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(~M_2)))))) = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_finished,((((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4))))))) at {40} in copy a_15

event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) at {44} in copy a_15 (goal)

The event ClientFinished(TLS12,cr_18,a_17,NoPSK,pk(a_22),a_16,nego(TLS12,RSA(a_18),a_19,a_20,a_21),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_key_expansion,(a_17,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),server_key_expansion,(a_17,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,a_17)),client_finished,(((CH(cr_18,a_16),SH(a_17,nego(TLS12,RSA(a_18),a_19,a_20,a_21))),CRT(pk(a_22))),CKE(rsa_enc(pk(a_22),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,a_17))) is executed at {44} in copy a_15.
A trace has been found.
RESULT event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.
-- Query not event(MatchingChannelBinding(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 131 rules.
400 rules inserted. Base: 375 rules (171 with conclusion selected). Queue: 89 rules.
600 rules inserted. Base: 479 rules (194 with conclusion selected). Queue: 167 rules.
800 rules inserted. Base: 543 rules (205 with conclusion selected). Queue: 198 rules.
1000 rules inserted. Base: 612 rules (220 with conclusion selected). Queue: 213 rules.
1200 rules inserted. Base: 662 rules (240 with conclusion selected). Queue: 219 rules.
1400 rules inserted. Base: 705 rules (259 with conclusion selected). Queue: 235 rules.
1600 rules inserted. Base: 817 rules (303 with conclusion selected). Queue: 201 rules.
1800 rules inserted. Base: 941 rules (374 with conclusion selected). Queue: 188 rules.
2000 rules inserted. Base: 1051 rules (406 with conclusion selected). Queue: 148 rules.
2200 rules inserted. Base: 1097 rules (452 with conclusion selected). Queue: 87 rules.
2400 rules inserted. Base: 1195 rules (478 with conclusion selected). Queue: 47 rules.
2600 rules inserted. Base: 1348 rules (504 with conclusion selected). Queue: 18 rules.
Starting query not event(MatchingChannelBinding(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3))
RESULT not event(MatchingChannelBinding(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is true.
-- Query inj-event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> inj-event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 138 rules.
400 rules inserted. Base: 371 rules (162 with conclusion selected). Queue: 86 rules.
600 rules inserted. Base: 498 rules (191 with conclusion selected). Queue: 195 rules.
800 rules inserted. Base: 574 rules (199 with conclusion selected). Queue: 279 rules.
1000 rules inserted. Base: 640 rules (211 with conclusion selected). Queue: 323 rules.
1200 rules inserted. Base: 721 rules (217 with conclusion selected). Queue: 311 rules.
1400 rules inserted. Base: 804 rules (248 with conclusion selected). Queue: 402 rules.
1600 rules inserted. Base: 857 rules (257 with conclusion selected). Queue: 404 rules.
1800 rules inserted. Base: 933 rules (290 with conclusion selected). Queue: 386 rules.
2000 rules inserted. Base: 983 rules (309 with conclusion selected). Queue: 409 rules.
2200 rules inserted. Base: 1062 rules (357 with conclusion selected). Queue: 377 rules.
2400 rules inserted. Base: 1152 rules (394 with conclusion selected). Queue: 355 rules.
2600 rules inserted. Base: 1277 rules (472 with conclusion selected). Queue: 305 rules.
2800 rules inserted. Base: 1388 rules (523 with conclusion selected). Queue: 287 rules.
3000 rules inserted. Base: 1493 rules (566 with conclusion selected). Queue: 262 rules.
3200 rules inserted. Base: 1585 rules (612 with conclusion selected). Queue: 234 rules.
3400 rules inserted. Base: 1695 rules (667 with conclusion selected). Queue: 223 rules.
3600 rules inserted. Base: 1772 rules (727 with conclusion selected). Queue: 217 rules.
3800 rules inserted. Base: 1852 rules (753 with conclusion selected). Queue: 222 rules.
4000 rules inserted. Base: 1882 rules (762 with conclusion selected). Queue: 153 rules.
4200 rules inserted. Base: 1884 rules (786 with conclusion selected). Queue: 76 rules.
4400 rules inserted. Base: 1981 rules (822 with conclusion selected). Queue: 29 rules.
Starting query inj-event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> inj-event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(r_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ44_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,RSA(r_2),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
The 1st hypothesis occurs strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 6th, 7th, 8th, 9th hypotheses occur before the conclusion.
Abbreviations:
pms_4 = pms_1[xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
cr_18 = cr[!1 = @sid]
@occ44_1 = @occ44[m2_1 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(r_2),h_2,a_13,pt_9))),CRT(pk(xxx_2))),CKE(rsa_enc(pk(xxx_2),pms_4))))))),xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,RSA(r_2),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(r_2) && attacker(h_3) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ44_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(r_2),h_3,a_14,pt_10),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),client_finished,(((CH(cr_19,o_16),SH(sr_13,nego(TLS12,RSA(r_2),h_3,a_14,pt_10))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th, 15th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
pms_4 = pms_1[xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(r_2),h_3,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ44_1 = @occ44[m2_1 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),server_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,RSA(r_2),h_3,a_14,pt_10))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_19,sr_13)),client_finished,(((CH(cr_19,o_16),SH(sr_13,nego(TLS12,RSA(r_2),h_3,a_14,pt_10))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(r_2),h_3,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))),@occ97_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ44_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd hypotheses occur strictly before the conclusion.
The 4th, 5th, 6th, 7th, 8th, 9th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_18 = cr[!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
pms_4 = pms_1[xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ44_1 = @occ44[m2_1 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ97_1 = @occ97[m1_3 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),epms = rsa_enc(pk(k_4),pms_4),p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))),@occ97_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ44_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),tls12_prf(pms_4,master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd hypotheses occur strictly before the conclusion.
The 4th, 5th, 6th, 7th, 8th, 9th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_18 = cr[!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
pms_4 = pms_1[xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ44_1 = @occ44[m2_1 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),server_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))),FIN(tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4))))))),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ97_1 = @occ97[m1_3 = tls12_prf(tls12_prf(pms_4,master_secret,(cr_18,sr_12)),client_finished,(((CH(cr_18,o_16),SH(sr_12,nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9))),CRT(pk(k_4))),CKE(rsa_enc(pk(k_4),pms_4)))),epms = rsa_enc(pk(k_4),pms_4),p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,RSA(StrongRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(e_1) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(sn_2) && attacker(k_4) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
The 2nd hypothesis occurs strictly before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))),s = sign(k_4,collision),e = e_1,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st hypothesis occurs strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 6th, 7th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
x_3 = x[s = sign(xxx_2,collision),e = BadElement,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,collision),e = BadElement,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12))))
The 1st hypothesis occurs strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 6th, 7th hypotheses occur before the conclusion.
Abbreviations:
x_3 = x[s = sign(xxx_2,collision),e = G,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
cr_18 = cr[!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,collision),e = G,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: attacker(x_3) && begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_3),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_4))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12))))
The 1st, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
The 2nd hypothesis occurs strictly before the conclusion.
Abbreviations:
x_4 = x[s = sign(xxx_2,collision),e = dh_ideal(G,x_3),xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
cr_18 = cr[!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_3),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_4)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_4),x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_3),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_4)))))))),s = sign(xxx_2,collision),e = dh_ideal(G,x_3),xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))),@occ79_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(xxx_2),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(xxx_2),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_3) && attacker(xxx_2) && attacker(xxx_3) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd, 5th hypotheses occur strictly before the conclusion.
The 4th, 6th, 7th, 8th, 9th, 10th, 11th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
x_4 = x_2[p_1 = pk(xxx_2),sk_2 = xxx_2,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
x_3 = x[s = sign(xxx_2,collision),e = dh_ideal(G,x_4),xxx = xxx_2,sn = sn_3,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,collision),e = dh_ideal(G,x_4),xxx = xxx_2,sn = sn_3,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ79_1 = @occ79[m1_2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,collision))),CKE(e2b(dh_ideal(G,x_3))))),gx_3 = dh_ideal(G,x_3),p_1 = pk(xxx_2),sk_2 = xxx_2,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: attacker(e_1) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(sn_2) && attacker(k_4) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
The 2nd hypothesis occurs strictly before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))))),CKE(e2b(BadElement))))))),s = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,e_1))),e = e_1,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st hypothesis occurs strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 6th, 7th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
x_3 = x[s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,BadElement))),e = BadElement,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,BadElement,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,BadElement))),e = BadElement,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12))))
The 1st hypothesis occurs strictly before the conclusion.
The 2nd, 3rd, 4th, 5th, 6th, 7th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
x_3 = x[s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,G))),e = G,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,G,sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,G))),e = G,xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: attacker(y_1) && begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_2) && attacker(xxx_2) && attacker(sr_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,y_1),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12))))
The 1st, 3rd, 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
The 2nd hypothesis occurs strictly before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
x_3 = x[s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,y_1)))),e = dh_ideal(G,y_1),xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,y_1),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,y_1),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,y_1)))),e = dh_ideal(G,y_1),xxx = xxx_2,sn = sn_2,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))),@occ79_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(xxx_2),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(xxx_2),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(xxx_2))) && attacker(sn_3) && attacker(xxx_2) && attacker(xxx_3) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(xxx_2),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd, 5th hypotheses occur strictly before the conclusion.
The 4th, 6th, 7th, 8th, 9th, 10th, 11th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
x_4 = x_2[p_1 = pk(xxx_2),sk_2 = xxx_2,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
x_3 = x[s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))),e = dh_ideal(G,x_4),xxx = xxx_2,sn = sn_3,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))),e = dh_ideal(G,x_4),xxx = xxx_2,sn = sn_3,p = pk(xxx_2),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ79_1 = @occ79[m1_2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(xxx_2))),SKE(StrongDH,dh_ideal(G,x_4),sign(xxx_2,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_4)))))),CKE(e2b(dh_ideal(G,x_3))))),gx_3 = dh_ideal(G,x_3),p_1 = pk(xxx_2),sk_2 = xxx_2,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: attacker(e_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))),s = sign(k_4,collision),e = e_1,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(e_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))),s = sign(k_4,collision),e = e_1,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(e_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) && attacker(a_15) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,collision))),CKE(e2b(BadElement))))))),s = sign(k_4,collision),e = e_1,xxx = k_4,sn = a_14,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th hypotheses occur before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th hypotheses occur before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))),@occ79_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,collision))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd hypotheses occur strictly before the conclusion.
The 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,collision))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,collision))),CKE(e2b(BadElement))))))),s = sign(k_4,collision),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid]
@occ79_1 = @occ79[m1_2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,collision))),CKE(e2b(BadElement)))),gx_3 = BadElement,p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(y_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(y_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(y_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
x_3 = x[s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
cr_19 = cr[!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))),@occ79_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd hypotheses occur strictly before the conclusion.
The 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_18 = cr[!1 = @sid_1]
x_4 = x_2[p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
x_3 = x[s = sign(k_4,collision),e = dh_ideal(G,x_4),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,collision),e = dh_ideal(G,x_4),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ79_1 = @occ79[m1_2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_4),sign(k_4,collision))),CKE(e2b(dh_ideal(G,x_3))))),gx_3 = dh_ideal(G,x_3),p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(e_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) && attacker(a_15) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_15,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),StrongHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_19,sr_13,WeakDH,e_1))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),StrongHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_19,sr_13,WeakDH,e_1))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(WeakDH),StrongHash,a_15,pt_10))),CRT(pk(k_4))),SKE(WeakDH,e_1,sign(k_4,hash_ideal((cr_19,sr_13,WeakDH,e_1))))),CKE(e2b(BadElement))))))),s = sign(k_4,hash_ideal((cr_19,sr_13,WeakDH,e_1))),e = e_1,xxx = k_4,sn = a_14,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),StrongHash,a_15,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
x_3 = x[s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,BadElement))),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,BadElement,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,BadElement))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,BadElement))),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement)))),tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th hypotheses occur before the conclusion.
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))),FIN(tls12_prf(tls12_prf(e2b(BadElement),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(WeakDH,BadElement,sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))))),CKE(e2b(BadElement))))))),s = sign(k_4,hash_ideal((cr_18,sr_12,WeakDH,BadElement))),e = BadElement,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(WeakDH),StrongHash,a_14,pt_10),sr = sr_12,offer = o_16,!1 = @sid]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13))))
The 1st, 2nd hypotheses occur strictly before the conclusion.
The 3rd, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_19 = cr[!1 = @sid_1]
x_3 = x[s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,G))),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(G,x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,G,sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,G))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,G))),e = G,xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(y_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) && attacker(a_14) && attacker(pt_10) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_19,sr_13,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_key_expansion,(sr_13,cr_19))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_key_expansion,(sr_13,cr_19))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13))))
The 1st, 4th, 5th, 6th, 7th, 8th, 9th, 10th, 11th, 12th, 13th, 14th hypotheses occur before the conclusion.
The 2nd, 3rd hypotheses occur strictly before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_19 = cr[!1 = @sid_1]
x_3 = x[s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,dh_ideal(G,y_1)))),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),server_finished,(((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,y_1),x_3)),master_secret,(cr_19,sr_13)),client_finished,((((CH(cr_19,o_16),SH(sr_13,nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,y_1),sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,dh_ideal(G,y_1)))))),CKE(e2b(dh_ideal(G,x_3)))))))),s = sign(k_4,hash_ideal((cr_19,sr_13,StrongDH,dh_ideal(G,y_1)))),e = dh_ideal(G,y_1),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_14,pt_10),sr = sr_13,offer = o_16,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_3),sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))))),CKE(e2b(dh_ideal(G,x_4))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))),@occ79_1) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(@occ30_1,ClientFinished(TLS12,cr_18,sr_12,NoPSK,pk(k_4),o_16,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_key_expansion,(sr_12,cr_18))),b2ae(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_key_expansion,(sr_12,cr_18))),tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_3),sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))))),CKE(e2b(dh_ideal(G,x_4))))),tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12))))
The 1st, 2nd, 3rd hypotheses occur strictly before the conclusion.
The 4th, 5th, 6th, 7th, 8th hypotheses occur before the conclusion.
Abbreviations:
k_4 = k_2[a_2 = sn_2,!1 = @sid]
cr_18 = cr[!1 = @sid_1]
x_3 = x_2[p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
x_4 = x[s = sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))),e = dh_ideal(G,x_3),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ30_1 = @occ30[m2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),server_finished,(((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_3),sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))))),CKE(e2b(dh_ideal(G,x_4)))),FIN(tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_3),sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))))),CKE(e2b(dh_ideal(G,x_4)))))))),s = sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))),e = dh_ideal(G,x_3),xxx = k_4,sn = sn_2,p = pk(k_4),mode = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),sr = sr_12,offer = o_16,!1 = @sid_1]
@occ79_1 = @occ79[m1_2 = tls12_prf(tls12_prf(e2b(dh_ideal(dh_ideal(G,x_3),x_4)),master_secret,(cr_18,sr_12)),client_finished,((((CH(cr_18,o_16),SH(sr_12,nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9))),CRT(pk(k_4))),SKE(StrongDH,dh_ideal(G,x_3),sign(k_4,hash_ideal((cr_18,sr_12,StrongDH,dh_ideal(G,x_3)))))),CKE(e2b(dh_ideal(G,x_4))))),gx_3 = dh_ideal(G,x_4),p_1 = pk(k_4),sk_2 = k_4,sn_1 = sn_2,mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_2]
RESULT inj-event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> inj-event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.
-- Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 130 rules.
400 rules inserted. Base: 376 rules (172 with conclusion selected). Queue: 101 rules.
600 rules inserted. Base: 485 rules (192 with conclusion selected). Queue: 228 rules.
800 rules inserted. Base: 567 rules (199 with conclusion selected). Queue: 242 rules.
1000 rules inserted. Base: 631 rules (214 with conclusion selected). Queue: 252 rules.
1200 rules inserted. Base: 718 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 767 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 847 rules (296 with conclusion selected). Queue: 328 rules.
1800 rules inserted. Base: 892 rules (318 with conclusion selected). Queue: 311 rules.
2000 rules inserted. Base: 1001 rules (377 with conclusion selected). Queue: 290 rules.
2200 rules inserted. Base: 1115 rules (443 with conclusion selected). Queue: 236 rules.
2400 rules inserted. Base: 1229 rules (499 with conclusion selected). Queue: 205 rules.
2600 rules inserted. Base: 1302 rules (532 with conclusion selected). Queue: 158 rules.
2800 rules inserted. Base: 1358 rules (594 with conclusion selected). Queue: 98 rules.
3000 rules inserted. Base: 1491 rules (637 with conclusion selected). Queue: 54 rules.
3200 rules inserted. Base: 1609 rules (667 with conclusion selected). Queue: 28 rules.
Starting query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(sr_12) -> end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)))
Abbreviations:
cr_18 = cr[!1 = @sid]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> end(ClientAEKeyLeaked(TLS12,cr_19,sr_13,NoPSK,pk(k_4)))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> end(ClientAEKeyLeaked(TLS12,cr_19,sr_13,NoPSK,pk(k_4)))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) -> end(ClientAEKeyLeaked(TLS12,cr_19,sr_13,NoPSK,pk(k_4)))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) -> end(ClientAEKeyLeaked(TLS12,cr_18,sr_12,NoPSK,pk(k_4)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
RESULT event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.
-- Query event(ClientReceives(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) ==> event(ServerSends(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 131 rules.
400 rules inserted. Base: 377 rules (172 with conclusion selected). Queue: 103 rules.
600 rules inserted. Base: 486 rules (192 with conclusion selected). Queue: 227 rules.
800 rules inserted. Base: 568 rules (199 with conclusion selected). Queue: 243 rules.
1000 rules inserted. Base: 632 rules (214 with conclusion selected). Queue: 253 rules.
1200 rules inserted. Base: 720 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 769 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 849 rules (296 with conclusion selected). Queue: 332 rules.
1800 rules inserted. Base: 895 rules (317 with conclusion selected). Queue: 329 rules.
2000 rules inserted. Base: 1005 rules (376 with conclusion selected). Queue: 382 rules.
2200 rules inserted. Base: 1112 rules (439 with conclusion selected). Queue: 355 rules.
2400 rules inserted. Base: 1192 rules (472 with conclusion selected). Queue: 340 rules.
2600 rules inserted. Base: 1263 rules (504 with conclusion selected). Queue: 303 rules.
2800 rules inserted. Base: 1331 rules (548 with conclusion selected). Queue: 264 rules.
3000 rules inserted. Base: 1431 rules (632 with conclusion selected). Queue: 140 rules.
3200 rules inserted. Base: 1531 rules (716 with conclusion selected). Queue: 97 rules.
3400 rules inserted. Base: 1657 rules (744 with conclusion selected). Queue: 66 rules.
3600 rules inserted. Base: 1775 rules (782 with conclusion selected). Queue: 37 rules.
Starting query event(ClientReceives(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) ==> event(ServerSends(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: attacker(n_7) && attacker(ad_7) && attacker(m_10) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(sr_12) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
goal reachable: attacker(n_7) && attacker(ad_7) && attacker(m_10) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> end(ClientReceives(TLS12,cr_19,sr_13,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(n_7) && attacker(ad_7) && attacker(m_10) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> end(ClientReceives(TLS12,cr_19,sr_13,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: attacker(n_7) && attacker(ad_7) && attacker(m_10) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) -> end(ClientReceives(TLS12,cr_19,sr_13,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(a_14) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_14,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(a_14) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_14,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_5),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_5),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_16) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_16,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_16) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_16,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_15)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_15) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(hhh_12) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_15,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(a_14) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_5),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_5),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_2,!1 = @sid_2]
k_4 = k_2[a_2 = a_14,!1 = @sid_3]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker(n_7) && attacker(ad_7) && attacker(m_10) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(offer_2) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_5),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_5),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_5),TLS12,DHE(WeakDH))) && attacker(sn_3) && attacker(xxx_2) && attacker(pt_9) && attacker(offer_2) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(WeakOrCompromisedKey(pk(k_5))) && attacker(k_5) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_2) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(StrongDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_4),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = a_15,!1 = @sid_2]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(sn_3) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_19,sr_13,pk(k_5),TLS12,h_2)) && begin(ServerChoosesAE(cr_19,sr_13,pk(k_5),TLS12,a_14)) && begin(ServerChoosesKEX(cr_19,sr_13,pk(k_5),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_14) && attacker(pt_9) && attacker(cr_19) && attacker(offer_2) && attacker(a_15) && attacker(xxx_3) && attacker(pt_10) && attacker(o_16) && attacker(a_13) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_10),xxx_1 = xxx_3,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = a_15,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
sr_13 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_14,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_19,!1 = @sid_4]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_5),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_5),TLS12,DHE(WeakDH))) && attacker(sn_3) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
goal reachable: begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad_7) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK)))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(sk_8),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(sk_8),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(sk_8),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(sk_8),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(sk_8),TLS12,DHE(WeakDH))) && begin(WeakOrCompromisedKey(pk(sk_8))) && attacker(sk_8) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_5),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_5),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_5),TLS12,DHE(WeakDH))) && attacker(sn_3) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_5),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_5 = k_2[a_2 = sn_3,!1 = @sid_2]
k_4 = k_2[a_2 = sn_2,!1 = @sid_3]
goal reachable: attacker(ad_7) && attacker(m_10) && begin(ServerSends(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad',m_s(TLS12,cr_18,sr_12,pk(k_4),NoPSK))) && attacker(n_7) && attacker(ad') && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> end(ClientReceives(TLS12,cr_18,sr_12,NoPSK,pk(k_4),n_7,ad_7,m_10))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
RESULT event(ClientReceives(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) ==> event(ServerSends(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.
-- Query attacker_p1(m_c(TLS12,cr_18,sr_12,p_7,psk_16)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) in process 1.
Translating the process into Horn clauses...
Completing...
200 rules inserted. Base: 200 rules (128 with conclusion selected). Queue: 129 rules.
400 rules inserted. Base: 375 rules (172 with conclusion selected). Queue: 100 rules.
600 rules inserted. Base: 485 rules (192 with conclusion selected). Queue: 228 rules.
800 rules inserted. Base: 566 rules (199 with conclusion selected). Queue: 243 rules.
1000 rules inserted. Base: 630 rules (214 with conclusion selected). Queue: 252 rules.
1200 rules inserted. Base: 717 rules (248 with conclusion selected). Queue: 323 rules.
1400 rules inserted. Base: 766 rules (257 with conclusion selected). Queue: 314 rules.
1600 rules inserted. Base: 846 rules (296 with conclusion selected). Queue: 324 rules.
1800 rules inserted. Base: 892 rules (320 with conclusion selected). Queue: 304 rules.
2000 rules inserted. Base: 999 rules (377 with conclusion selected). Queue: 281 rules.
2200 rules inserted. Base: 1115 rules (445 with conclusion selected). Queue: 242 rules.
2400 rules inserted. Base: 1234 rules (504 with conclusion selected). Queue: 191 rules.
2600 rules inserted. Base: 1307 rules (530 with conclusion selected). Queue: 143 rules.
2800 rules inserted. Base: 1373 rules (597 with conclusion selected). Queue: 85 rules.
3000 rules inserted. Base: 1499 rules (632 with conclusion selected). Queue: 61 rules.
3200 rules inserted. Base: 1613 rules (668 with conclusion selected). Queue: 23 rules.
Starting query attacker_p1(m_c(TLS12,cr_18,sr_12,p_7,psk_16)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash))
goal reachable: begin(WeakOrCompromisedKey(pk(k_4))) && attacker(k_4) && attacker(sr_12) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> attacker_p1(m_c(TLS12,cr_19,sr_13,pk(k_4),NoPSK))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(sn_2) && attacker(sr_13) -> attacker_p1(m_c(TLS12,cr_19,sr_13,pk(k_4),NoPSK))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = sn_2,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,h_2)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(xxx_2) && attacker(h_2) && attacker(a_13) && attacker(pt_9) && attacker(cr_18) && attacker(offer_2) && attacker(a_14) && attacker(sr_13) -> attacker_p1(m_c(TLS12,cr_19,sr_13,pk(k_4),NoPSK))
Abbreviations:
cr_19 = cr[!1 = @sid]
k_4 = k_2[a_2 = a_14,!1 = @sid_1]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),h_2,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_2]
goal reachable: begin(PostSessionCompromisedKey(pk(k_4))) && attacker_p1(a_13) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(WeakRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(WeakRSADecryption),hhh_12,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,hhh_12)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,RSA(StrongRSADecryption))) && attacker(sn_2) && attacker(xxx_2) && attacker(hhh_12) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,RSA(StrongRSADecryption),hhh_12,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(offer_2) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),StrongHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = offer_2,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,StrongHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),StrongHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: attacker_p1(a_13) && begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,a_13)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(WeakDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(a_13) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(WeakDH),WeakHash,a_13,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
goal reachable: begin(ServerChoosesHash(cr_18,sr_12,pk(k_4),TLS12,WeakHash)) && begin(ServerChoosesAE(cr_18,sr_12,pk(k_4),TLS12,WeakAE)) && begin(ServerChoosesKEX(cr_18,sr_12,pk(k_4),TLS12,DHE(StrongDH))) && attacker(sn_2) && attacker(xxx_2) && attacker(pt_9) && attacker(o_16) -> attacker_p1(m_c(TLS12,cr_18,sr_12,pk(k_4),NoPSK))
Abbreviations:
cr_18 = cr[!1 = @sid]
sr_12 = sr_1[mode_1 = nego(TLS12,DHE(StrongDH),WeakHash,WeakAE,pt_9),xxx_1 = xxx_2,offer_1 = o_16,cr_1 = cr_18,!1 = @sid_1]
k_4 = k_2[a_2 = sn_2,!1 = @sid_2]
RESULT attacker_p1(m_c(TLS12,cr_18,sr_12,p_7,psk_16)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.

--------------------------------------------------------------
Verification summary:

Query event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.

Query event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) ==> event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) is true.

Query not event(ServerFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.

Query not event(ClientFinished(TLS12,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is false.

Query not event(ServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is true.

Query not event(PreServerFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5)) is true.

Query not event(ClientFinished(TLS13,cr_18,sr_12,psk_16,p_7,m_10,o_16,ck_12,sk_8,cb_5,ms_9)) is true.

Query not event(MatchingResumptionSecret(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is false.

Query not event(MatchingAEKey(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is false.

Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) is false.

Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) is false.

Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is false.

Query not event(MatchingChannelBinding(TLS12,cr_18,sr_12,p_7,TLS12,cr'_5,sr'_3,p'_3)) is true.

Query inj-event(ClientFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) ==> inj-event(ServerFinished(TLS12,cr_18,sr_12,NoPSK,p_7,o_16,m_10,ck_12,sk_8,cb_5,ms_9)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.

Query event(ClientAEKeyLeaked(TLS12,cr_18,sr_12,psk_16,p_7)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.

Query event(ClientReceives(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) ==> event(ServerSends(TLS12,cr_18,sr_12,NoPSK,p_7,n_7,ad_7,m_10)) || event(WeakOrCompromisedKey(p_7)) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.

Query attacker_p1(m_c(TLS12,cr_18,sr_12,p_7,psk_16)) ==> event(WeakOrCompromisedKey(p_7)) || (event(PostSessionCompromisedKey(p_7)) && event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,RSA(ra)))) || event(ServerChoosesAE(cr_18,sr_12,p_7,TLS12,WeakAE)) || event(ServerChoosesKEX(cr_18,sr_12,p_7,TLS12,DHE(WeakDH))) || event(ServerChoosesKEX(cr'_5,sr'_3,p_7,TLS12,RSA(WeakRSADecryption))) || event(ServerChoosesHash(cr'_5,sr'_3,p_7,TLS12,WeakHash)) is true.

--------------------------------------------------------------

